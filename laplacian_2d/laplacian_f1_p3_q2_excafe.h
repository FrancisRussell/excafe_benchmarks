#include <cassert>
#include <cmath>
#include <ufc.h>

// Common sub-expression elimination pass took 0 minutes and 8.98 seconds (wall clock).

class ExcafeCellIntegral_0 : public ufc::cell_integral
{
public:
  void tabulate_tensor(double* const A, const double* const* w, const ufc::cell& c) const
  {
    const double * const * x = c.coordinates;

    const double var_0 = w[0][6] + w[0][8];
    const double var_1 = w[0][4] + w[0][3];
    const double var_2 = w[0][1] + w[0][2];
    const double var_3 = w[0][7] + w[0][5];
    const double var_4 = 0.4500000000000000111022302*w[0][9];
    const double var_5 = 0.3333333333333333148296163*w[0][0];
    const double var_6 = 0.3333333333333333148296163*var_2 + var_4 + -0.1000000000000000055511151*var_5 + 0.7750000000000000222044605*var_0 + -0.1250000000000000000000000*var_3 + -0.0250000000000000013877788*var_1;
    const double var_7 = -x[0][0];
    const double var_8 = x[2][0] + var_7;
    const double var_9 = -x[0][1];
    const double var_10 = x[2][1] + var_9;
    const double var_11 = x[1][0] + var_7;
    const double var_12 = x[1][1] + var_9;
    const double var_13 = -var_12*var_8 + var_10*var_11;
    const double var_14 = var_13;
    const double var_15 = std::abs(var_14);
    const double var_16 = var_13;
    const double var_17 = var_11*var_8 + var_10*var_12;
    const double var_18 = var_10*var_10 + var_8*var_8;
    const double var_19 = var_11*var_11 + var_12*var_12;
    const double var_20 = var_19 + var_18;
    const double var_21 = -var_18 + var_17;
    const double var_22 = -var_19 + var_17;
    const double var_23 = 0.2000000000000000111022302*w[0][2] + 2.6000000000000000888178420*w[0][8];
    const double var_24 = w[0][5] + 2.0000000000000000000000000*w[0][7];
    const double var_25 = 0.4000000000000000222044605*w[0][6];
    const double var_26 = var_25 + var_23 + 3.4000000000000003552713679*w[0][3] + -0.8000000000000000444089210*var_24 + var_5;
    const double var_27 = w[0][3] + 0.6000000000000000888178420*w[0][8];
    const double var_28 = -w[0][0];
    const double var_29 = 0.0666666666666666657414808*var_28;
    const double var_30 = 0.0666666666666666657414808*w[0][1] + w[0][5] + -var_27 + var_25 + var_29;
    const double var_31 = w[0][0] + w[0][2];
    const double var_32 = w[0][6] + w[0][5];
    const double var_33 = 0.2000000000000000111022302*var_32;
    const double var_34 = w[0][8] + w[0][3];
    const double var_35 = 3.0000000000000000000000000*var_34;
    const double var_36 = var_33 + 0.6000000000000000888178420*w[0][4] + -0.2666666666666666629659233*var_31 + -var_35;
    const double var_37 = 0.4000000000000000222044605*var_21*w[0][4] + var_19*var_36 + 3.6000000000000000888178420*var_22*w[0][9] + 0.6000000000000000888178420*var_20*w[0][7] + 0.8000000000000000444089210*var_22*w[0][1] + var_18*var_30 + var_17*var_26;
    A[23] = 0.1428571428571428492126927*var_15*var_37/(var_16*var_16);
    A[33] = A[23];
    const double var_38 = -w[0][8];
    const double var_39 = w[0][7] + var_38;
    const double var_40 = w[0][7] + w[0][8];
    const double var_41 = w[0][5] + w[0][3];
    const double var_42 = 3.0000000000000000000000000*var_41;
    const double var_43 = -var_40 + -var_42;
    const double var_44 = 0.6666666666666666296592325*w[0][0];
    const double var_45 = 0.1285714285714285587403083*w[0][9] + 0.1428571428571428492126927*var_44;
    const double var_46 = 0.0166666666666666664353702*w[0][2];
    const double var_47 = 0.1642857142857142849212693*w[0][5] + var_45 + 0.1571428571428571396850771*w[0][3] + 0.0690476190476190521128075*w[0][1] + 0.0500000000000000027755576*w[0][7] + 0.0142857142857142852682140*var_38 + var_46;
    const double var_48 = -var_17;
    const double var_49 = 3.0000000000000000000000000*w[0][9] + var_1;
    const double var_50 = var_3 + -4.0000000000000000000000000*var_49 + -2.0000000000000000000000000*var_0;
    const double var_51 = w[0][4] + w[0][6];
    const double var_52 = 3.0000000000000000000000000*var_51;
    const double var_53 = 0.2000000000000000111022302*var_43 + 0.8000000000000000444089210*w[0][2] + var_52;
    const double var_54 = var_18*var_53;
    const double var_55 = w[0][7] + w[0][4];
    const double var_56 = 3.0000000000000000000000000*var_55;
    const double var_57 = -var_32 + -var_56;
    const double var_58 = 0.2000000000000000111022302*var_57 + 0.8000000000000000444089210*w[0][1] + var_35;
    const double var_59 = var_19*var_58;
    const double var_60 = var_19*w[0][2] + var_18*w[0][1];
    const double var_61 = var_20 + var_48;
    const double var_62 = var_61*w[0][0] + var_60;
    const double var_63 = var_59 + var_54 + 0.4000000000000000222044605*var_17*var_50 + 3.6000000000000000888178420*var_20*w[0][9] + 0.2666666666666666629659233*var_62 + 0.1333333333333333314829616*var_2*var_48;
    A[21] = 0.1428571428571428492126927*var_15*var_63/(var_16*var_16);
    const double var_64 = 0.1666666666666666574148081*w[0][2];
    const double var_65 = 2.6000000000000000888178420*w[0][6] + 0.2000000000000000111022302*w[0][1];
    const double var_66 = w[0][4] + var_65;
    const double var_67 = var_64 + 0.2000000000000000111022302*w[0][7] + 0.2500000000000000000000000*var_66;
    const double var_68 = -0.8571428571428570952761561*w[0][9];
    const double var_69 = -0.0952380952380952328084618*w[0][1] + var_68;
    const double var_70 = 0.2857142857142856984253854*w[0][3];
    const double var_71 = -0.2261904761904761917978846*w[0][0];
    const double var_72 = var_70 + -1.1071428571428569842538536*w[0][4] + 0.2500000000000000000000000*w[0][5] + -0.8214285714285713968507707*w[0][6] + var_71 + -0.3214285714285713968507707*w[0][7] + -0.4404761904761904656169236*w[0][2] + var_69;
    const double var_73 = 0.2142857142857142738190390*var_17*w[0][9];
    const double var_74 = w[0][0] + w[0][1];
    const double var_75 = 1.5000000000000000000000000*var_74 + 19.5000000000000000000000000*var_51 + 5.6666666666666660745477202*w[0][2];
    const double var_76 = 0.5000000000000000000000000*var_75 + var_43;
    const double var_77 = var_73 + 0.2000000000000000111022302*var_19*var_72 + 0.0285714285714285705364279*var_17*var_76;
    A[16] = var_15*var_77/(var_16*var_16);
    const double var_78 = -var_19*w[0][5] + -var_18*w[0][7];
    const double var_79 = 0.0166666666666666664353702*w[0][1];
    const double var_80 = w[0][7] + 2.0000000000000000000000000*w[0][5];
    const double var_81 = 1.5000000000000000000000000*w[0][9] + 0.0833333333333333287074041*w[0][0];
    const double var_82 = var_34 + var_33;
    const double var_83 = -w[0][6];
    const double var_84 = w[0][4] + var_83;
    const double var_85 = w[0][5] + var_83;
    const double var_86 = 0.4000000000000000222044605*w[0][8];
    const double var_87 = var_65 + var_86 + 3.4000000000000003552713679*w[0][4] + -0.8000000000000000444089210*var_80 + var_5;
    const double var_88 = w[0][4] + 0.6000000000000000888178420*w[0][6];
    const double var_89 = var_86 + w[0][7] + 0.0666666666666666657414808*w[0][2] + -var_88 + var_29;
    const double var_90 = 0.2000000000000000111022302*var_40;
    const double var_91 = var_90 + -0.2666666666666666629659233*var_74 + 0.6000000000000000888178420*w[0][3] + -var_52;
    const double var_92 = var_19*var_89 + 0.4000000000000000222044605*var_22*w[0][3] + 3.6000000000000000888178420*var_21*w[0][9] + 0.6000000000000000888178420*var_20*w[0][5] + 0.8000000000000000444089210*var_21*w[0][2] + var_17*var_87 + var_18*var_91;
    const double var_93 = 1.5000000000000000000000000*var_31 + 5.6666666666666660745477202*w[0][1] + 19.5000000000000000000000000*var_34;
    const double var_94 = var_57 + 0.5000000000000000000000000*var_93;
    const double var_95 = 0.2500000000000000000000000*w[0][6];
    const double var_96 = var_95 + 0.6500000000000000222044605*w[0][4] + var_64;
    const double var_97 = 0.3000000000000000444089210*w[0][9] + 0.0500000000000000027755576*var_28;
    const double var_98 = -var_96 + 0.4000000000000000222044605*var_80 + var_97 + 0.2000000000000000111022302*var_38 + var_79;
    const double var_99 = -0.2000000000000000111022302*var_34 + 0.4000000000000000222044605*var_32 + var_55;
    const double var_100 = 1.5000000000000000000000000*var_48*w[0][9];
    const double var_101 = var_51 + var_90;
    const double var_102 = 4.0000000000000000000000000*w[0][3] + 2.0000000000000000000000000*w[0][8] + var_81;
    const double var_103 = -0.5000000000000000000000000*var_93 + w[0][6] + var_56;
    const double var_104 = var_21*w[0][5] + var_102*var_18 + var_103*var_17;
    const double var_105 = var_100 + -var_18*var_67 + 0.2000000000000000111022302*var_104;
    A[9] = 0.1428571428571428492126927*var_105*var_15/(var_16*var_16);
    const double var_106 = 0.8571428571428570952761561*var_49 + var_3 + 0.1428571428571428492126927*var_2 + var_44;
    const double var_107 = var_19*w[0][3] + var_21*w[0][6] + var_22*w[0][8] + var_18*w[0][4];
    const double var_108 = var_19*w[0][7] + var_18*w[0][5];
    const double var_109 = var_20*w[0][0] + -var_60;
    const double var_110 = var_19*var_88 + var_18*var_27 + 0.0666666666666666657414808*var_109 + 0.6000000000000000888178420*var_78 + -var_108;
    const double var_111 = 0.0571428571428571410728559*var_107 + -0.2000000000000000111022302*var_106*var_17 + 0.1428571428571428492126927*var_110;
    const double var_112 = 9.0000000000000000000000000*w[0][9] + var_44;
    const double var_113 = 0.1666666666666666574148081*w[0][1];
    const double var_114 = w[0][3] + var_23;
    const double var_115 = var_113 + 0.2000000000000000111022302*w[0][5] + 0.2500000000000000000000000*var_114;
    const double var_116 = 2.0000000000000000000000000*w[0][6] + 4.0000000000000000000000000*w[0][4] + var_81;
    const double var_117 = w[0][7] + -var_116;
    const double var_118 = var_115 + 0.2000000000000000111022302*var_117;
    const double var_119 = -0.0952380952380952328084618*w[0][2] + var_68;
    const double var_120 = 0.2500000000000000000000000*w[0][8];
    const double var_121 = -0.4404761904761904656169236*w[0][0];
    const double var_122 = var_120 + 0.2857142857142856984253854*w[0][6] + -1.1071428571428569842538536*w[0][5] + -0.8214285714285713968507707*w[0][7] + -0.3214285714285713968507707*w[0][3] + -0.2261904761904761917978846*w[0][1] + var_119 + var_121;
    const double var_123 = var_120 + 0.6500000000000000222044605*w[0][3] + var_113;
    const double var_124 = 0.4000000000000000222044605*var_24 + -var_123 + var_97 + 0.2000000000000000111022302*var_83 + var_46;
    const double var_125 = var_22*w[0][4] + var_48*w[0][6];
    const double var_126 = 0.1428571428571428492126927*var_124*var_19 + var_17*var_47 + 0.2000000000000000111022302*var_122*var_18 + 0.0285714285714285705364279*var_125;
    const double var_127 = 3.9000000000000003552713679*w[0][9];
    const double var_128 = 0.2500000000000000000000000*var_40 + 1.8000000000000000444089210*w[0][2] + 0.6000000000000000888178420*var_74 + 4.6500000000000003552713679*var_51 + var_127 + -1.3500000000000000888178420*var_41;
    const double var_129 = var_48 + var_18;
    const double var_130 = 0.2857142857142856984253854*w[0][4];
    const double var_131 = 0.4285714285714285476380780*w[0][5] + -1.5714285714285713968507707*w[0][8] + var_130 + -0.5238095238095238359576911*w[0][1] + w[0][7] + -1.8571428571428569842538536*w[0][3];
    const double var_132 = 0.0571428571428571410728559*var_48*w[0][0];
    const double var_133 = var_41 + -0.2000000000000000111022302*var_51 + 0.4000000000000000222044605*var_40;
    const double var_134 = 0.0571428571428571410728559*var_112*var_19 + 0.0380952380952380986744998*var_61*w[0][2] + 0.2857142857142856984253854*var_133*var_18 + 0.1333333333333333314829616*var_18*var_74 + 0.3428571428571428603149229*var_129*w[0][9] + var_132 + 0.4000000000000000222044605*var_131*var_17 + 0.1428571428571428492126927*var_59;
    A[5] = var_126*var_15/(var_16*var_16);
    A[30] = A[5];
    const double var_135 = w[0][5] + -var_102;
    const double var_136 = var_67 + 0.2000000000000000111022302*var_135;
    const double var_137 = 0.0500000000000000027755576*w[0][5] + var_45 + 0.1571428571428571396850771*w[0][4] + 0.1642857142857142849212693*w[0][7] + 0.0690476190476190521128075*w[0][2] + 0.0142857142857142852682140*var_83 + var_79;
    const double var_138 = 0.3333333333333333148296163*var_74 + 0.7750000000000000222044605*var_41 + var_4;
    const double var_139 = -0.5000000000000000000000000*var_75 + w[0][8] + var_42;
    const double var_140 = var_139*var_17 + var_116*var_19 + var_22*w[0][7];
    const double var_141 = var_100 + -var_115*var_19 + 0.2000000000000000111022302*var_140;
    A[15] = 0.1428571428571428492126927*var_141*var_15/(var_16*var_16);
    A[20] = A[15];
    A[29] = var_111*var_15/(var_16*var_16);
    A[14] = 0.0357142857142857123031732*var_128*var_15*var_19/(var_16*var_16);
    A[19] = A[9];
    const double var_142 = 3.6666666666666665186369300*w[0][0];
    const double var_143 = var_95 + var_121 + -1.1071428571428569842538536*w[0][7] + -0.2261904761904761917978846*w[0][2] + -0.8214285714285713968507707*w[0][5] + 0.2857142857142856984253854*w[0][8] + -0.3214285714285713968507707*w[0][4] + var_69;
    const double var_144 = var_21*w[0][3] + var_48*w[0][8];
    const double var_145 = 0.1428571428571428492126927*var_18*var_98 + var_137*var_17 + 0.2000000000000000111022302*var_143*var_19 + 0.0285714285714285705364279*var_144;
    A[4] = var_145*var_15/(var_16*var_16);
    A[24] = A[4];
    A[35] = var_134*var_15/(var_16*var_16);
    A[26] = A[16];
    const double var_146 = var_142 + -w[0][4] + w[0][7] + -3.6666666666666665186369300*w[0][2] + 9.0000000000000000000000000*var_85;
    const double var_147 = w[0][3] + var_38;
    const double var_148 = 0.4000000000000000222044605*var_147*var_17 + 0.0500000000000000027755576*var_146*var_17 + var_136*var_18;
    const double var_149 = 0.5000000000000000000000000*var_20 + var_48;
    const double var_150 = -0.5000000000000000000000000*var_20 + var_17;
    const double var_151 = 6.0000000000000000000000000*var_3 + -0.7500000000000000000000000*var_2 + -4.2500000000000000000000000*var_1 + -2.2500000000000000000000000*var_0;
    const double var_152 = var_19*var_51 + -0.0833333333333333287074041*var_60 + var_18*var_34 + 0.5000000000000000000000000*var_149*w[0][0] + -4.0000000000000000000000000*var_108 + 2.0000000000000000000000000*var_78 + 3.0000000000000000000000000*var_150*w[0][9] + var_151*var_17;
    const double var_153 = var_18*var_96 + var_123*var_19 + 0.2000000000000000111022302*var_152;
    A[3] = 0.1428571428571428492126927*var_15*var_153/(var_16*var_16);
    const double var_154 = var_19 + var_48;
    const double var_155 = 0.7750000000000000222044605*var_55 + 0.3333333333333333148296163*var_31 + var_4;
    const double var_156 = var_154*var_155 + 0.0333333333333333328707404*var_22*w[0][1] + 0.1250000000000000000000000*var_22*var_82;
    A[22] = 0.1428571428571428492126927*var_15*var_92/(var_16*var_16);
    A[27] = A[22];
    const double var_157 = 0.2500000000000000000000000*var_1 + 4.6500000000000003552713679*var_3 + 1.8000000000000000444089210*w[0][0] + 0.6000000000000000888178420*var_2 + var_127;
    const double var_158 = var_129*var_138 + 0.0333333333333333328707404*var_21*w[0][2] + 0.1250000000000000000000000*var_101*var_21;
    A[8] = 0.0714285714285714246063463*var_15*var_17*var_6/(var_16*var_16);
    const double var_159 = 0.2500000000000000000000000*var_32 + 1.8000000000000000444089210*w[0][1] + 0.6000000000000000888178420*var_31 + 4.6500000000000003552713679*var_34 + -1.3500000000000000888178420*var_55 + var_127;
    A[7] = 0.0357142857142857123031732*var_15*var_159*var_18/(var_16*var_16);
    const double var_160 = w[0][5] + -1.5714285714285713968507707*w[0][6] + -1.8571428571428569842538536*w[0][4] + -0.5238095238095238359576911*w[0][2] + 0.4285714285714285476380780*w[0][7] + var_70;
    const double var_161 = 0.2857142857142856984253854*var_19*var_99 + 0.0571428571428571410728559*var_112*var_18 + 0.3428571428571428603149229*var_154*w[0][9] + 0.0380952380952380986744998*var_61*w[0][1] + 0.1333333333333333314829616*var_19*var_31 + 0.4000000000000000222044605*var_160*var_17 + 0.1428571428571428492126927*var_54 + var_132;
    A[28] = var_15*var_161/(var_16*var_16);
    A[1] = 0.0714285714285714246063463*var_15*var_158/(var_16*var_16);
    A[6] = A[1];
    const double var_162 = var_130 + -0.8214285714285713968507707*w[0][8] + -1.1071428571428569842538536*w[0][3] + -0.4404761904761904656169236*w[0][1] + 0.2500000000000000000000000*w[0][7] + -0.3214285714285713968507707*w[0][5] + var_71 + var_119;
    const double var_163 = var_73 + 0.2000000000000000111022302*var_162*var_18 + 0.0285714285714285705364279*var_17*var_94;
    A[11] = var_15*var_163/(var_16*var_16);
    const double var_164 = var_149*var_157 + 1.3500000000000000888178420*var_0*var_150;
    A[18] = A[3];
    const double var_165 = var_142 + w[0][5] + -3.6666666666666665186369300*w[0][1] + -w[0][3] + 9.0000000000000000000000000*var_39;
    const double var_166 = 0.4000000000000000222044605*var_17*var_84 + 0.0500000000000000027755576*var_165*var_17 + var_118*var_19;
    A[10] = 0.1428571428571428492126927*var_148*var_15/(var_16*var_16);
    A[25] = A[10];
    A[0] = 0.0714285714285714246063463*var_15*var_164/(var_16*var_16);
    A[13] = A[8];
    A[2] = 0.0714285714285714246063463*var_15*var_156/(var_16*var_16);
    A[12] = A[2];
    A[17] = 0.1428571428571428492126927*var_15*var_166/(var_16*var_16);
    A[34] = A[29];
    A[31] = A[11];
    A[32] = A[17];
  }

  void tabulate_tensor(double* const A,
                       const double* const* w,
                       const ufc::cell& c,
                       unsigned int num_quadrature_points,
                       const double* const* quadrature_points,
                       const double* quadrature_weights) const
  {
    assert(0 && "This function is not implemented!");
  }
};

extern "C" ufc::cell_integral* newExcafeCellIntegral_0()
{
  return new ExcafeCellIntegral_0();
}
