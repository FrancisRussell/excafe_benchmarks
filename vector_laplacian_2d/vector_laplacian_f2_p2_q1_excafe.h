#include <cassert>
#include <cmath>
#include <ufc.h>

// Common sub-expression elimination pass took 5 minutes and 42.41 seconds (wall clock).

class ExcafeCellIntegral_0 : public ufc::cell_integral
{
public:
  void tabulate_tensor(double* const A, const double* const* w, const ufc::cell& c) const
  {
    const double * const * x = c.coordinates;

    const double var_0 = w[0][10]*w[1][4] + w[0][9]*w[1][3] + w[0][11]*w[1][5] + w[0][5]*w[1][11] + w[0][3]*w[1][9] + w[0][4]*w[1][10];
    const double var_1 = w[0][10]*w[1][5] + w[0][5]*w[1][10] + w[0][4]*w[1][11] + w[0][11]*w[1][4];
    const double var_2 = 2.0000000000000000000000000*var_0 + var_1;
    const double var_3 = -x[0][1];
    const double var_4 = x[1][1] + var_3;
    const double var_5 = -x[0][0];
    const double var_6 = x[2][0] + var_5;
    const double var_7 = var_6*w[1][7];
    const double var_8 = var_4*w[1][2] + var_7;
    const double var_9 = var_6*w[0][7];
    const double var_10 = var_4*w[0][2] + var_9;
    const double var_11 = var_8*w[0][6] + var_10*w[1][6];
    const double var_12 = x[2][1] + var_3;
    const double var_13 = x[1][0] + var_5;
    const double var_14 = var_13*w[1][8];
    const double var_15 = var_12*w[1][1] + var_14;
    const double var_16 = var_13*w[0][8];
    const double var_17 = var_12*w[0][1] + var_16;
    const double var_18 = var_17*w[1][6] + var_15*w[0][6];
    const double var_19 = -var_18 + var_11;
    const double var_20 = -var_4 + var_12;
    const double var_21 = w[0][1] + w[0][0];
    const double var_22 = w[0][3]*w[1][4] + w[0][4]*w[1][3];
    const double var_23 = w[1][0] + w[1][1];
    const double var_24 = 2.0000000000000000000000000*var_22 + var_21*w[1][5] + var_23*w[0][5];
    const double var_25 = w[0][0]*w[1][10] + w[0][10]*w[1][0] + w[0][8]*w[1][4] + w[0][4]*w[1][8];
    const double var_26 = var_12*var_24 + var_13*var_25;
    const double var_27 = var_4*w[1][4] + var_6*w[1][11];
    const double var_28 = var_4*w[0][4] + var_6*w[0][11];
    const double var_29 = w[0][5]*w[1][3] + w[0][3]*w[1][5];
    const double var_30 = w[0][2]*w[1][4] + w[0][4]*w[1][2] + 2.0000000000000000000000000*var_29;
    const double var_31 = w[0][5]*w[1][7] + w[0][7]*w[1][5];
    const double var_32 = var_30*var_4 + var_27*w[0][0] + var_28*w[1][0] + var_31*var_6;
    const double var_33 = -var_26 + var_32;
    const double var_34 = w[0][6]*w[1][0] + w[0][0]*w[1][6];
    const double var_35 = 0.5000000000000000000000000*var_34;
    const double var_36 = 1.3333333333333332593184650*var_0 + var_35;
    const double var_37 = -var_36;
    const double var_38 = w[0][1] + w[0][2];
    const double var_39 = w[1][7] + w[1][8];
    const double var_40 = w[0][10]*w[1][11] + w[0][11]*w[1][10];
    const double var_41 = w[0][8] + w[0][7];
    const double var_42 = 2.0000000000000000000000000*var_40 + var_39*w[0][9] + var_41*w[1][9];
    const double var_43 = w[1][2] + w[1][1];
    const double var_44 = w[0][5]*w[1][4] + w[0][4]*w[1][5];
    const double var_45 = var_38*w[1][3] + var_43*w[0][3] + 2.0000000000000000000000000*var_44;
    const double var_46 = var_13*var_42*var_6 + var_12*var_4*var_45;
    const double var_47 = 0.3333333333333333148296163*var_13*w[0][8] + var_9;
    const double var_48 = 0.3333333333333333148296163*var_13*w[1][8] + var_7;
    const double var_49 = var_47*w[1][1] + var_48*w[0][1];
    const double var_50 = 0.3333333333333333148296163*var_6*w[0][7] + var_16;
    const double var_51 = 0.3333333333333333148296163*var_6*w[1][7] + var_14;
    const double var_52 = var_50*w[1][2] + var_51*w[0][2];
    const double var_53 = var_12*var_49 + var_4*var_52;
    const double var_54 = 0.6666666666666666296592325*var_46 + 0.5000000000000000000000000*var_53;
    const double var_55 = var_13*var_50*w[1][8] + var_4*var_4*w[0][2]*w[1][2] + var_47*var_6*w[1][7];
    const double var_56 = w[0][9]*w[1][2] + w[0][3]*w[1][7] + w[0][2]*w[1][9] + w[0][7]*w[1][3];
    const double var_57 = w[0][8]*w[1][3] + w[0][1]*w[1][9] + w[0][3]*w[1][8] + w[0][9]*w[1][1];
    const double var_58 = w[0][2]*w[1][1] + w[0][1]*w[1][2];
    const double var_59 = var_12*w[0][1]*w[1][1];
    const double var_60 = 0.6666666666666666296592325*var_13*var_57 + 0.5000000000000000000000000*var_59 + 0.1666666666666666574148081*var_4*var_58;
    const double var_61 = 0.6666666666666666296592325*var_4*var_56*var_6 + 0.5000000000000000000000000*var_55 + var_12*var_60;
    const double var_62 = -var_61 + var_54;
    A[19] = 0.0000000000000000000000000;
    const double var_63 = -var_13;
    const double var_64 = var_6 + var_63;
    const double var_65 = w[0][3]*w[1][3] + w[0][5]*w[1][5] + w[0][4]*w[1][4];
    const double var_66 = 1.3333333333333332593184650*var_65;
    const double var_67 = 0.5000000000000000000000000*w[0][0]*w[1][0] + var_66;
    const double var_68 = w[0][10]*w[1][3] + w[0][3]*w[1][10] + w[0][4]*w[1][9] + w[0][9]*w[1][4];
    const double var_69 = -var_68;
    const double var_70 = var_1 + var_69;
    const double var_71 = var_26 + -var_32;
    const double var_72 = var_8*w[0][0] + var_10*w[1][0];
    const double var_73 = var_15*w[0][0] + var_17*w[1][0];
    const double var_74 = var_72 + -var_73;
    const double var_75 = 2.0000000000000000000000000*var_71 + 0.5000000000000000000000000*var_74;
    const double var_76 = 0.3333333333333333148296163*var_75;
    const double var_77 = 0.6666666666666666296592325*var_6*var_70 + var_76;
    const double var_78 = w[0][11]*w[1][3] + w[0][5]*w[1][9] + w[0][3]*w[1][11] + w[0][9]*w[1][5];
    const double var_79 = -var_0;
    const double var_80 = var_78 + var_79;
    const double var_81 = 0.5000000000000000000000000*var_34*var_64 + 1.3333333333333332593184650*var_13*var_80 + var_4*var_67 + var_77;
    const double var_82 = var_12*var_13 + -var_4*var_6;
    const double var_83 = var_82;
    const double var_84 = std::abs(var_83);
    const double var_85 = var_82;
    const double var_86 = var_4*var_4;
    const double var_87 = var_12*var_12;
    const double var_88 = var_86 + var_87;
    const double var_89 = -var_72 + var_73;
    const double var_90 = 0.5000000000000000000000000*var_89 + 2.0000000000000000000000000*var_33;
    const double var_91 = 0.3333333333333333148296163*var_90;
    const double var_92 = -var_54 + var_61;
    const double var_93 = -var_11 + var_18;
    const double var_94 = w[0][10]*w[1][9] + w[0][9]*w[1][10];
    const double var_95 = w[0][7]*w[1][11] + w[0][11]*w[1][7] + 2.0000000000000000000000000*var_94;
    const double var_96 = w[0][2]*w[1][10] + w[0][10]*w[1][2];
    const double var_97 = var_6*var_95 + var_27*w[0][6] + var_28*w[1][6] + var_4*var_96;
    const double var_98 = w[0][1]*w[1][11] + w[0][6]*w[1][5] + w[0][5]*w[1][6] + w[0][11]*w[1][1];
    const double var_99 = w[0][8] + w[0][6];
    const double var_100 = w[0][9]*w[1][11] + w[0][11]*w[1][9];
    const double var_101 = w[1][8] + w[1][6];
    const double var_102 = 2.0000000000000000000000000*var_100 + var_101*w[0][10] + var_99*w[1][10];
    const double var_103 = var_102*var_13;
    const double var_104 = var_12*var_98 + var_103;
    const double var_105 = -var_104 + var_97;
    const double var_106 = var_12*var_70 + var_105;
    const double var_107 = w[0][10]*w[1][10] + w[0][9]*w[1][9] + w[0][11]*w[1][11];
    const double var_108 = 1.3333333333333332593184650*var_107;
    const double var_109 = 0.5000000000000000000000000*w[0][6]*w[1][6] + var_108;
    const double var_110 = var_109*var_13;
    const double var_111 = 0.1666666666666666574148081*var_93 + 0.6666666666666666296592325*var_106 + var_110;
    const double var_112 = var_92 + var_111*var_13;
    const double var_113 = -var_78;
    const double var_114 = var_0 + var_113;
    const double var_115 = 0.6666666666666666296592325*var_114 + var_35;
    const double var_116 = var_112 + var_115*var_12*var_13;
    const double var_117 = w[0][0]*w[1][0];
    const double var_118 = var_117 + var_66;
    const double var_119 = 1.3333333333333332593184650*var_78 + var_37;
    const double var_120 = var_77 + -var_118*var_12 + var_119*var_13;
    const double var_121 = var_116 + var_67*var_88 + var_12*var_91 + var_120*var_4;
    const double var_122 = 0.5000000000000000000000000*var_6 + var_63;
    const double var_123 = -var_97;
    const double var_124 = var_123 + var_104;
    const double var_125 = 0.5000000000000000000000000*var_19 + 2.0000000000000000000000000*var_124;
    const double var_126 = 0.3333333333333333148296163*var_125;
    const double var_127 = 1.3333333333333332593184650*var_107*var_64 + var_126;
    const double var_128 = var_122*w[0][6]*w[1][6] + 0.6666666666666666296592325*var_114*var_4 + var_127;
    const double var_129 = 1.3333333333333332593184650*var_68 + var_37;
    const double var_130 = var_128 + 0.5000000000000000000000000*var_34*var_4 + var_12*var_129;
    const double var_131 = var_121 + var_130*var_6;
    const double var_132 = var_6*var_6 + var_87;
    A[7] = var_131*var_132*var_84/(var_85*var_85*var_85*var_85);
    A[28] = A[7];
    const double var_133 = 1.3333333333333332593184650*var_46 + -var_55;
    const double var_134 = w[0][6]*w[1][6];
    const double var_135 = var_134 + var_108;
    const double var_136 = 2.6666666666666665186369300*var_65;
    const double var_137 = var_117 + var_135 + var_136;
    const double var_138 = 0.3333333333333333148296163*var_74 + 1.3333333333333332593184650*var_71;
    const double var_139 = -var_12*var_137 + var_138;
    const double var_140 = w[0][6]*w[1][8] + w[0][8]*w[1][6];
    const double var_141 = var_103 + var_123;
    const double var_142 = 8.0000000000000000000000000*var_107*var_64 + -var_13*var_140 + var_11 + 4.0000000000000000000000000*var_141;
    const double var_143 = var_13*var_6 + var_12*var_4;
    const double var_144 = var_13*var_13 + var_86;
    const double var_145 = 1.3333333333333332593184650*var_6*var_68 + var_12*var_67;
    const double var_146 = var_91 + -var_36*var_6 + var_145;
    const double var_147 = var_109*var_6 + var_126;
    const double var_148 = var_1 + var_113;
    const double var_149 = -var_6*var_78 + var_1*var_64;
    const double var_150 = var_149*var_4 + var_12*var_13*var_148;
    const double var_151 = var_12*var_146 + var_92 + var_147*var_6 + 0.6666666666666666296592325*var_150;
    const double var_152 = var_0 + var_69;
    const double var_153 = 2.0000000000000000000000000*var_152 + var_34;
    const double var_154 = -2.0000000000000000000000000*var_107*var_6 + var_105;
    const double var_155 = 2.0000000000000000000000000*var_154 + 0.5000000000000000000000000*var_93;
    const double var_156 = 0.3333333333333333148296163*var_155;
    const double var_157 = var_156 + -0.5000000000000000000000000*var_6*w[0][6]*w[1][6];
    const double var_158 = var_62 + var_157*var_6;
    const double var_159 = -var_1;
    const double var_160 = var_68 + var_80 + var_159;
    const double var_161 = -var_35 + 0.6666666666666666296592325*var_160;
    const double var_162 = var_91 + var_161*var_6 + -var_4*var_67;
    const double var_163 = var_158 + var_162*var_4;
    const double var_164 = 1.5000000000000000000000000*w[0][0]*w[1][0] + var_136;
    const double var_165 = -var_12 + var_4;
    const double var_166 = var_138 + var_164*var_165;
    const double var_167 = var_12*var_166 + var_163;
    const double var_168 = var_118 + var_134;
    const double var_169 = -var_168*var_6;
    const double var_170 = var_110 + var_169 + var_156;
    const double var_171 = -var_34;
    const double var_172 = 2.0000000000000000000000000*var_80 + 0.6666666666666666296592325*var_68 + var_171;
    const double var_173 = var_6 + -0.5000000000000000000000000*var_13;
    const double var_174 = var_127 + var_173*w[0][6]*w[1][6];
    const double var_175 = 1.3333333333333332593184650*var_114 + var_35;
    const double var_176 = var_175*var_4;
    const double var_177 = var_176 + var_64*var_67 + var_174;
    const double var_178 = var_35 + 0.6666666666666666296592325*var_152;
    const double var_179 = var_177*var_4 + var_132*var_178 + var_13*var_91 + var_143*var_172 + var_12*var_170 + var_6*var_76;
    const double var_180 = var_12*var_161;
    const double var_181 = var_176 + var_180 + var_126 + -var_109*var_13;
    const double var_182 = var_76 + var_118*var_4 + -var_12*var_67;
    const double var_183 = var_13*var_181 + var_12*var_182;
    const double var_184 = 2.6666666666666665186369300*var_107*var_13*var_6;
    const double var_185 = 1.3333333333333332593184650*var_154 + 0.3333333333333333148296163*var_93;
    const double var_186 = -var_6 + var_13;
    const double var_187 = var_185 + 1.5000000000000000000000000*var_186*w[0][6]*w[1][6];
    const double var_188 = var_183 + var_62 + var_184 + var_187*var_6;
    const double var_189 = var_13*var_188 + var_179*var_4;
    const double var_190 = var_167*var_4*var_4 + var_143*var_151 + var_13*var_189 + var_12*var_144*var_153*var_6;
    A[2] = var_190*var_84/(var_85*var_85*var_85*var_85);
    const double var_191 = 1.3333333333333332593184650*var_143*var_2;
    const double var_192 = -2.6666666666666665186369300*var_13*var_65 + var_122*w[0][0]*w[1][0];
    const double var_193 = var_115*var_6 + var_77;
    const double var_194 = w[0][2]*w[1][7] + -4.0000000000000000000000000*var_56 + w[0][7]*w[1][2];
    const double var_195 = 4.0000000000000000000000000*var_33 + var_89;
    const double var_196 = var_13*var_195 + var_143*var_194;
    const double var_197 = -1.5000000000000000000000000*var_143*var_34 + -var_191 + var_193*var_6 + var_192*var_4 + 0.3333333333333333148296163*var_196;
    const double var_198 = 3.0000000000000000000000000*w[0][0]*w[1][0] + 5.3333333333333330372738601*var_65;
    const double var_199 = 2.0000000000000000000000000*var_65 + var_117;
    const double var_200 = var_79 + var_68;
    const double var_201 = w[0][2]*w[1][8] + 1.5000000000000000000000000*var_34 + w[0][8]*w[1][2] + 3.3333333333333330372738601*var_114;
    const double var_202 = var_128 + 1.3333333333333332593184650*var_6*var_65;
    const double var_203 = var_4*var_81 + var_112 + var_202*var_6;
    const double var_204 = 2.0000000000000000000000000*var_114 + var_34;
    const double var_205 = 0.3333333333333333148296163*var_195 + var_13*var_204 + var_164*var_20;
    const double var_206 = var_180 + var_174;
    const double var_207 = var_205*var_4 + var_158 + var_13*var_206;
    const double var_208 = var_159 + var_78;
    const double var_209 = 2.0000000000000000000000000*var_200 + 0.6666666666666666296592325*var_208 + var_171;
    const double var_210 = -w[0][1]*w[1][6] + -w[0][6]*w[1][1] + 4.0000000000000000000000000*var_98;
    const double var_211 = 0.3333333333333333148296163*var_13*var_210;
    const double var_212 = var_4*w[0][0]*w[1][0] + var_211;
    const double var_213 = var_132*var_36 + var_143*var_209 + var_212*var_6;
    const double var_214 = var_76 + -var_145;
    const double var_215 = var_213*var_6 + var_203*var_4 + var_12*var_207 + var_132*var_214;
    const double var_216 = 1.5000000000000000000000000*var_64*w[0][6]*w[1][6] + var_204*var_4 + 0.3333333333333333148296163*var_142;
    const double var_217 = var_216*var_6 + var_121;
    const double var_218 = var_163*var_6 + var_13*var_217;
    const double var_219 = var_12*var_215 + var_218*var_6;
    A[1] = var_219*var_84/(var_85*var_85*var_85*var_85);
    A[22] = A[1];
    A[27] = A[1];
    const double var_220 = -var_13*var_13*w[0][6]*w[1][6];
    const double var_221 = var_211 + var_75 + var_198*var_4;
    const double var_222 = 2.0000000000000000000000000*var_13*var_168 + var_185 + var_169;
    const double var_223 = var_13*var_142 + -var_143*var_58;
    const double var_224 = -2.0000000000000000000000000*var_199*var_88 + var_12*var_221 + var_220 + var_4*var_90 + var_222*var_6 + 0.3333333333333333148296163*var_223;
    const double var_225 = 2.0000000000000000000000000*var_68 + var_78;
    const double var_226 = 5.0000000000000000000000000*var_152 + var_148;
    const double var_227 = var_13*var_139 + 1.3333333333333332593184650*var_144*var_225 + 0.6666666666666666296592325*var_143*var_226;
    const double var_228 = var_49 + 1.5000000000000000000000000*var_34*var_64 + -1.3333333333333332593184650*var_13*var_57 + -var_59;
    const double var_229 = var_116*var_12 + -var_13*var_191 + var_143*var_228 + var_227*var_6 + var_224*var_4 + var_132*var_146;
    const double var_230 = var_184 + var_220;
    const double var_231 = 3.0000000000000000000000000*var_13 + -2.0000000000000000000000000*var_6;
    const double var_232 = var_155 + var_231*w[0][6]*w[1][6];
    const double var_233 = -4.0000000000000000000000000*var_107*var_13 + var_125;
    const double var_234 = var_232*var_6 + 2.0000000000000000000000000*var_230 + var_13*var_233;
    const double var_235 = var_13*var_234 + var_6*var_92 + var_132*var_147 + var_197*var_4;
    const double var_236 = 2.0000000000000000000000000*var_78 + var_68;
    const double var_237 = var_143*var_201 + 1.3333333333333332593184650*var_132*var_236;
    const double var_238 = var_237*var_4 + var_121*var_13;
    const double var_239 = var_13*var_238 + var_12*var_229 + var_203*var_4*var_4 + var_235*var_6 + var_133*var_143;
    A[31] = 0.0000000000000000000000000;
    const double var_240 = var_36 + -1.3333333333333332593184650*var_68;
    const double var_241 = var_12*var_240 + var_13*var_135;
    const double var_242 = var_163 + var_183 + var_241*var_6;
    A[8] = var_143*var_242*var_84/(var_85*var_85*var_85*var_85);
    A[34] = A[8];
    A[16] = 0.0000000000000000000000000;
    A[6] = A[1];
    A[15] = 0.0000000000000000000000000;
    A[0] = var_239*var_84/(var_85*var_85*var_85*var_85);
    A[26] = 0.0000000000000000000000000;
    A[30] = 0.0000000000000000000000000;
    A[25] = 0.0000000000000000000000000;
    A[5] = 0.0000000000000000000000000;
    A[10] = 0.0000000000000000000000000;
    A[21] = A[0];
    A[12] = A[2];
    A[13] = A[8];
    A[9] = 0.0000000000000000000000000;
    A[32] = 0.0000000000000000000000000;
    A[14] = var_131*var_144*var_84/(var_85*var_85*var_85*var_85);
    A[35] = A[14];
    A[4] = 0.0000000000000000000000000;
    A[11] = 0.0000000000000000000000000;
    A[24] = 0.0000000000000000000000000;
    A[29] = A[8];
    A[3] = 0.0000000000000000000000000;
    A[20] = 0.0000000000000000000000000;
    A[17] = 0.0000000000000000000000000;
    A[23] = A[2];
    A[18] = 0.0000000000000000000000000;
    A[33] = A[2];
  }

  void tabulate_tensor(double* const A,
                       const double* const* w,
                       const ufc::cell& c,
                       unsigned int num_quadrature_points,
                       const double* const* quadrature_points,
                       const double* quadrature_weights) const
  {
    assert(0 && "This function is not implemented!");
  }
};

extern "C" ufc::cell_integral* newExcafeCellIntegral_0()
{
  return new ExcafeCellIntegral_0();
}
