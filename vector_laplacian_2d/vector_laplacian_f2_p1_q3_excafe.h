#include <cassert>
#include <cmath>
#include <ufc.h>

// Common sub-expression elimination pass took 4 minutes and 21.00 seconds (wall clock).

class ExcafeCellIntegral_0 : public ufc::cell_integral
{
public:
  void tabulate_tensor(double* const A, const double* const* w, const ufc::cell& c) const
  {
    const double * const * x = c.coordinates;

    A[193] = 0.0000000000000000000000000;
    A[363] = 0.0000000000000000000000000;
    const double var_0 = -x[0][1];
    const double var_1 = x[2][1] + var_0;
    const double var_2 = -x[0][0];
    const double var_3 = x[1][0] + var_2;
    const double var_4 = x[1][1] + var_0;
    const double var_5 = x[2][0] + var_2;
    const double var_6 = -var_4*var_5 + var_1*var_3;
    const double var_7 = var_6;
    const double var_8 = std::abs(var_7);
    const double var_9 = var_6;
    const double var_10 = var_5*var_5*var_5*var_5*w[0][3]*w[1][3] + var_1*var_1*var_1*var_1*w[0][0]*w[1][0];
    const double var_11 = var_5*w[1][4] + var_4*w[1][2];
    const double var_12 = var_3*w[1][5] + var_1*w[1][1];
    const double var_13 = -var_11 + var_12;
    const double var_14 = var_11 + -var_12;
    const double var_15 = var_4*w[0][2] + var_5*w[0][4];
    const double var_16 = var_3*w[0][5] + var_1*w[0][1];
    const double var_17 = var_14*var_16 + var_13*var_15;
    const double var_18 = 0.5000000000000000000000000*var_17;
    const double var_19 = var_3*var_3;
    const double var_20 = var_5*var_5;
    const double var_21 = var_19 + var_20;
    const double var_22 = var_3*var_5;
    const double var_23 = -0.5000000000000000000000000*var_21 + var_22;
    const double var_24 = -var_15 + var_16;
    const double var_25 = var_13*w[0][3] + var_24*w[1][3];
    const double var_26 = var_15 + -var_16;
    const double var_27 = var_26*w[1][3] + var_14*w[0][3];
    const double var_28 = var_27*var_5 + var_25*var_3;
    const double var_29 = var_23*w[0][3]*w[1][3] + var_18 + 0.5000000000000000000000000*var_28;
    const double var_30 = w[0][3]*w[1][0] + w[0][0]*w[1][3];
    const double var_31 = var_24*w[1][0] + var_13*w[0][0];
    const double var_32 = -var_3 + var_5;
    const double var_33 = var_31 + var_30*var_32;
    const double var_34 = 0.5000000000000000000000000*var_1*var_33 + var_29;
    const double var_35 = var_4*var_4;
    const double var_36 = var_1*var_1;
    const double var_37 = var_35 + var_36;
    const double var_38 = var_1*var_4;
    const double var_39 = -0.5000000000000000000000000*var_37 + var_38;
    const double var_40 = var_39*w[0][0]*w[1][0];
    const double var_41 = var_26*w[1][0] + var_14*w[0][0];
    const double var_42 = var_4*var_41 + var_1*var_31;
    const double var_43 = var_18 + var_40 + 0.5000000000000000000000000*var_42;
    const double var_44 = -var_4 + var_1;
    const double var_45 = var_27 + var_30*var_44;
    const double var_46 = var_43 + 0.5000000000000000000000000*var_45*var_5;
    const double var_47 = var_1*var_1*var_34 + -0.5000000000000000000000000*var_10 + var_46*var_5*var_5;
    const double var_48 = var_1*var_1*var_1*var_4*w[0][0]*w[1][0] + var_3*var_5*var_5*var_5*w[0][3]*w[1][3];
    const double var_49 = var_3*var_3*var_3*var_5*w[0][3]*w[1][3] + var_1*var_4*var_4*var_4*w[0][0]*w[1][0];
    const double var_50 = -var_5 + var_3;
    const double var_51 = var_41 + var_30*var_50;
    const double var_52 = -var_1 + var_4;
    const double var_53 = var_25 + var_30*var_52;
    const double var_54 = var_1*var_1*var_4*var_51 + var_3*var_5*var_5*var_53;
    const double var_55 = var_3*var_3*var_45*var_5 + var_1*var_33*var_4*var_4;
    const double var_56 = var_3*var_3*var_3*var_3*w[0][3]*w[1][3] + var_4*var_4*var_4*var_4*w[0][0]*w[1][0];
    const double var_57 = var_14*var_15 + var_13*var_16;
    const double var_58 = 0.5000000000000000000000000*var_57;
    const double var_59 = -var_3*var_5 + 0.5000000000000000000000000*var_21;
    const double var_60 = var_27*var_3 + var_25*var_5;
    const double var_61 = var_59*w[0][3]*w[1][3] + var_58 + 0.5000000000000000000000000*var_60;
    const double var_62 = 0.5000000000000000000000000*var_33*var_4 + var_61;
    const double var_63 = -var_1*var_4 + 0.5000000000000000000000000*var_37;
    const double var_64 = var_63*w[0][0]*w[1][0];
    const double var_65 = var_31*var_4 + var_1*var_41;
    const double var_66 = var_58 + var_64 + 0.5000000000000000000000000*var_65;
    const double var_67 = var_66 + 0.5000000000000000000000000*var_3*var_45;
    const double var_68 = var_4*var_4*var_62 + var_3*var_3*var_67 + 0.5000000000000000000000000*var_56;
    const double var_69 = 0.0250000000000000013877788*var_68;
    const double var_70 = var_1*var_4*var_61 + var_3*var_5*var_66;
    const double var_71 = var_3*var_3*var_5*var_5*w[0][3]*w[1][3] + var_1*var_1*var_4*var_4*w[0][0]*w[1][0];
    const double var_72 = -1.5000000000000000000000000*var_71;
    const double var_73 = var_70 + var_72;
    const double var_74 = 0.4250000000000000444089210*var_73;
    const double var_75 = var_69 + var_74 + 0.2000000000000000111022302*var_55 + 0.4375000000000000000000000*var_54 + 0.6625000000000000888178420*var_48 + 0.1875000000000000000000000*var_49 + 0.4500000000000000111022302*var_47;
    A[7] = 3.0000000000000000000000000*var_75*var_8/(var_9*var_9*var_9*var_9);
    const double var_76 = 0.5000000000000000000000000*var_1*var_51;
    const double var_77 = var_62 + var_64 + var_76;
    A[344] = 0.0000000000000000000000000;
    const double var_78 = 0.5000000000000000000000000*var_4*var_51;
    const double var_79 = var_78 + var_29;
    const double var_80 = var_43 + 0.5000000000000000000000000*var_3*var_53;
    const double var_81 = var_4*var_4*var_79 + -0.5000000000000000000000000*var_56 + var_3*var_3*var_80;
    const double var_82 = var_76 + var_61;
    const double var_83 = 0.5000000000000000000000000*var_5*var_53 + var_66;
    const double var_84 = var_1*var_1*var_82 + 0.5000000000000000000000000*var_10 + var_5*var_5*var_83;
    const double var_85 = 0.0250000000000000013877788*var_84;
    const double var_86 = var_85 + 0.6625000000000000888178420*var_49 + 0.1875000000000000000000000*var_48 + 0.2000000000000000111022302*var_54 + 0.4500000000000000111022302*var_81 + 0.4375000000000000000000000*var_55 + var_74;
    A[5] = 3.0000000000000000000000000*var_8*var_86/(var_9*var_9*var_9*var_9);
    A[100] = A[5];
    const double var_87 = var_1*var_1*var_33*var_4 + var_3*var_45*var_5*var_5;
    const double var_88 = var_3*var_43*var_5 + var_1*var_29*var_4;
    const double var_89 = -var_49;
    const double var_90 = var_1*var_4*var_4*var_51 + var_3*var_3*var_5*var_53;
    const double var_91 = 0.5000000000000000000000000*var_90;
    const double var_92 = 0.5000000000000000000000000*var_89 + var_88 + var_91;
    const double var_93 = 0.1000000000000000055511151*var_84;
    const double var_94 = 1.9500000000000001776356839*var_71;
    const double var_95 = var_93 + -1.0500000000000000444089210*var_48 + 1.9000000000000001332267630*var_92 + var_87 + var_94;
    A[23] = 0.7500000000000000000000000*var_8*var_95/(var_9*var_9*var_9*var_9);
    A[61] = A[23];
    const double var_96 = var_47 + 1.5000000000000000000000000*var_48 + var_54;
    const double var_97 = 0.2000000000000000111022302*var_70 + -0.3250000000000000111022302*var_71;
    const double var_98 = 0.1250000000000000000000000*var_55 + 0.0500000000000000027755576*var_81 + 0.1500000000000000222044605*var_49 + 0.2000000000000000111022302*var_96 + var_97;
    A[97] = 0.0000000000000000000000000;
    const double var_99 = var_34 + var_40 + var_78;
    const double var_100 = var_22 + var_38;
    A[107] = 3.3750000000000000000000000*var_100*var_8*var_99/(var_9*var_9*var_9*var_9);
    A[355] = A[107];
    const double var_101 = var_55 + var_49;
    const double var_102 = var_70 + 0.5000000000000000000000000*var_101;
    const double var_103 = var_96 + var_102 + var_72;
    A[69] = 4.0499999999999998223643161*var_103*var_8/(var_9*var_9*var_9*var_9);
    A[183] = A[69];
    const double var_104 = var_19 + var_35;
    A[47] = 0.0750000000000000111022302*var_104*var_8*var_99/(var_9*var_9*var_9*var_9);
    A[142] = A[47];
    const double var_105 = 0.3125000000000000000000000*var_71;
    const double var_106 = -0.3250000000000000111022302*var_48 + 0.2250000000000000055511151*var_84 + 0.2125000000000000222044605*var_87 + 0.2000000000000000111022302*var_92 + var_105;
    A[27] = 3.0000000000000000000000000*var_106*var_8/(var_9*var_9*var_9*var_9);
    A[351] = A[27];
    A[129] = 4.0499999999999998223643161*var_100*var_8*var_99/(var_9*var_9*var_9*var_9);
    const double var_107 = -var_48;
    const double var_108 = 0.5000000000000000000000000*var_87;
    const double var_109 = 0.5000000000000000000000000*var_107 + var_88 + var_108;
    const double var_110 = 1.5000000000000000000000000*var_71;
    const double var_111 = var_68 + var_90 + 1.5000000000000000000000000*var_89 + var_109 + var_110;
    A[67] = 0.6750000000000000444089210*var_111*var_8/(var_9*var_9*var_9*var_9);
    A[353] = A[67];
    A[90] = 0.0000000000000000000000000;
    A[96] = 0.0000000000000000000000000;
    const double var_112 = var_81 + var_47;
    const double var_113 = 0.5000000000000000000000000*var_112;
    const double var_114 = var_48 + var_49;
    const double var_115 = var_55 + var_54;
    const double var_116 = var_114 + var_73 + var_113 + 0.7500000000000000000000000*var_115;
    A[3] = 0.1500000000000000222044605*var_116*var_8/(var_9*var_9*var_9*var_9);
    A[290] = A[3];
    A[150] = 0.0000000000000000000000000;
    A[206] = 0.0000000000000000000000000;
    A[108] = 0.6750000000000000444089210*var_100*var_77*var_8/(var_9*var_9*var_9*var_9);
    A[127] = A[108];
    A[300] = 0.0000000000000000000000000;
    A[55] = 0.0000000000000000000000000;
    const double var_117 = -1.4000000000000001332267630*var_71;
    const double var_118 = 0.9500000000000000666133815*var_102 + 0.9000000000000000222044605*var_47 + var_117 + 0.9250000000000000444089210*var_54 + 1.3750000000000000000000000*var_48;
    A[28] = 1.5000000000000000000000000*var_118*var_8/(var_9*var_9*var_9*var_9);
    A[238] = A[28];
    A[248] = 0.0000000000000000000000000;
    A[200] = 0.0000000000000000000000000;
    A[111] = 0.0000000000000000000000000;
    A[146] = A[108];
    A[240] = 0.0000000000000000000000000;
    const double var_119 = var_48 + var_54;
    const double var_120 = var_70 + 0.5000000000000000000000000*var_119;
    const double var_121 = var_81 + var_55 + 1.5000000000000000000000000*var_49;
    const double var_122 = var_121 + var_120 + var_72;
    A[68] = 3.3750000000000000000000000*var_122*var_8/(var_9*var_9*var_9*var_9);
    A[163] = A[68];
    A[287] = 0.0000000000000000000000000;
    A[110] = 0.0000000000000000000000000;
    A[398] = A[129];
    A[119] = 0.0000000000000000000000000;
    A[279] = A[69];
    A[75] = 0.0000000000000000000000000;
    A[148] = 13.5000000000000000000000000*var_8*var_98/(var_9*var_9*var_9*var_9);
    A[167] = A[148];
    A[297] = A[67];
    A[288] = 0.0000000000000000000000000;
    const double var_123 = 0.1250000000000000000000000*var_72;
    const double var_124 = 0.0750000000000000111022302*var_48 + 0.0875000000000000083266727*var_54 + var_85 + 0.2000000000000000111022302*var_102 + var_123;
    A[24] = 3.0000000000000000000000000*var_124*var_8/(var_9*var_9*var_9*var_9);
    A[291] = A[24];
    const double var_125 = 1.5000000000000000000000000*var_107 + var_84 + var_87 + var_92 + var_110;
    A[65] = 0.6750000000000000444089210*var_125*var_8/(var_9*var_9*var_9*var_9);
    A[333] = A[65];
    const double var_126 = var_108 + var_71 + var_91;
    const double var_127 = 0.5000000000000000000000000*var_126 + var_88 + var_113;
    A[64] = 1.3500000000000000888178420*var_127*var_8/(var_9*var_9*var_9*var_9);
    A[293] = A[64];
    A[51] = 0.0000000000000000000000000;
    A[362] = 0.0000000000000000000000000;
    A[172] = 0.0000000000000000000000000;
    A[286] = 0.0000000000000000000000000;
    A[303] = 0.0000000000000000000000000;
    A[365] = 0.0000000000000000000000000;
    A[133] = 0.0000000000000000000000000;
    A[384] = 0.0000000000000000000000000;
    A[161] = A[28];
    A[2] = 0.1750000000000000166533454*var_122*var_8/(var_9*var_9*var_9*var_9);
    A[212] = A[2];
    A[157] = 0.0000000000000000000000000;
    A[170] = 0.0000000000000000000000000;
    A[201] = 0.0000000000000000000000000;
    const double var_128 = -0.3250000000000000111022302*var_49 + 0.2125000000000000222044605*var_90 + var_105 + 0.2250000000000000055511151*var_68 + 0.2000000000000000111022302*var_109;
    A[45] = 3.0000000000000000000000000*var_128*var_8/(var_9*var_9*var_9*var_9);
    A[312] = A[45];
    A[83] = A[64];
    A[4] = A[3];
    const double var_129 = 0.0750000000000000111022302*var_49 + 0.0875000000000000083266727*var_55 + var_69 + var_123 + 0.2000000000000000111022302*var_120;
    A[43] = 3.0000000000000000000000000*var_129*var_8/(var_9*var_9*var_9*var_9);
    A[62] = A[43];
    A[30] = 0.0000000000000000000000000;
    A[228] = 0.0000000000000000000000000;
    A[307] = 0.0000000000000000000000000;
    A[74] = 0.0000000000000000000000000;
    A[11] = 0.0000000000000000000000000;
    A[99] = 0.0000000000000000000000000;
    A[209] = 0.0000000000000000000000000;
    A[71] = 0.0000000000000000000000000;
    A[395] = A[69];
    A[338] = A[108];
    A[361] = 0.0000000000000000000000000;
    A[162] = A[47];
    A[320] = 0.0000000000000000000000000;
    A[229] = 0.0000000000000000000000000;
    A[132] = 0.0000000000000000000000000;
    A[272] = A[43];
    A[305] = 0.0000000000000000000000000;
    A[215] = A[5];
    A[179] = 0.0000000000000000000000000;
    A[181] = 0.0000000000000000000000000;
    A[261] = 0.0000000000000000000000000;
    A[34] = 0.0000000000000000000000000;
    A[89] = 4.0499999999999998223643161*var_122*var_8/(var_9*var_9*var_9*var_9);
    A[299] = A[89];
    A[274] = A[64];
    A[202] = 0.0000000000000000000000000;
    A[225] = 0.0000000000000000000000000;
    A[306] = 0.0000000000000000000000000;
    const double var_130 = var_68 + var_84;
    const double var_131 = 0.5000000000000000000000000*var_130;
    const double var_132 = -0.7500000000000000000000000*var_114 + 0.5000000000000000000000000*var_88 + var_126 + var_131;
    A[63] = 6.7500000000000000000000000*var_132*var_8/(var_9*var_9*var_9*var_9);
    A[315] = A[63];
    A[239] = 0.0000000000000000000000000;
    A[285] = 0.0000000000000000000000000;
    A[49] = 0.0000000000000000000000000;
    A[260] = 0.0000000000000000000000000;
    A[219] = 0.0000000000000000000000000;
    A[86] = 3.3750000000000000000000000*var_103*var_8/(var_9*var_9*var_9*var_9);
    A[334] = A[86];
    A[22] = 0.1750000000000000166533454*var_100*var_8*var_99/(var_9*var_9*var_9*var_9);
    A[251] = A[22];
    A[244] = 0.0000000000000000000000000;
    A[242] = 0.0000000000000000000000000;
    A[378] = A[63];
    A[324] = 0.0000000000000000000000000;
    A[249] = 0.0000000000000000000000000;
    const double var_133 = var_20 + var_36;
    A[21] = 0.8500000000000000888178420*var_133*var_77*var_8/(var_9*var_9*var_9*var_9);
    A[277] = A[67];
    A[221] = 0.0000000000000000000000000;
    A[321] = 0.0000000000000000000000000;
    A[77] = 0.0000000000000000000000000;
    A[17] = 0.0000000000000000000000000;
    const double var_134 = var_89 + var_88 + var_107 + 1.5000000000000000000000000*var_126 + var_131;
    const double var_135 = 0.1000000000000000055511151*var_68;
    A[104] = A[65];
    A[188] = A[129];
    A[374] = A[67];
    A[275] = A[65];
    A[70] = 0.0000000000000000000000000;
    const double var_136 = var_88 + var_110;
    const double var_137 = var_93 + 0.5500000000000000444089210*var_87 + 0.6000000000000000888178420*var_107 + 0.9000000000000000222044605*var_68 + -1.4000000000000001332267630*var_49 + 0.9500000000000000666133815*var_90 + var_136;
    A[0] = 1.7000000000000001776356839*var_134*var_8/(var_9*var_9*var_9*var_9);
    A[210] = A[0];
    A[109] = A[69];
    A[130] = 0.0000000000000000000000000;
    const double var_138 = -1.4000000000000001332267630*var_48 + var_136 + 0.5500000000000000444089210*var_90 + 0.9000000000000000222044605*var_84 + 0.9500000000000000666133815*var_87 + var_135 + 0.6000000000000000888178420*var_89;
    A[8] = 0.7500000000000000000000000*var_138*var_8/(var_9*var_9*var_9*var_9);
    A[218] = A[8];
    A[94] = 0.0000000000000000000000000;
    A[35] = 0.0000000000000000000000000;
    A[42] = 0.8500000000000000888178420*var_104*var_77*var_8/(var_9*var_9*var_9*var_9);
    A[252] = A[42];
    A[92] = 0.0000000000000000000000000;
    A[296] = A[86];
    A[231] = A[21];
    const double var_139 = 0.2000000000000000111022302*var_121 + 0.1500000000000000222044605*var_48 + 0.1250000000000000000000000*var_54 + 0.0500000000000000027755576*var_47 + var_97;
    A[106] = 13.5000000000000000000000000*var_139*var_8/(var_9*var_9*var_9*var_9);
    A[316] = A[106];
    A[383] = 0.0000000000000000000000000;
    A[360] = 0.0000000000000000000000000;
    A[187] = A[89];
    A[114] = 0.0000000000000000000000000;
    A[203] = 0.0000000000000000000000000;
    A[60] = A[3];
    A[14] = 0.0000000000000000000000000;
    A[177] = 0.0000000000000000000000000;
    A[273] = A[63];
    A[139] = 0.0000000000000000000000000;
    A[151] = 0.0000000000000000000000000;
    A[227] = 0.0000000000000000000000000;
    A[364] = 0.0000000000000000000000000;
    A[246] = 0.0000000000000000000000000;
    A[369] = 0.0000000000000000000000000;
    A[310] = A[5];
    A[233] = A[23];
    A[262] = 0.0000000000000000000000000;
    A[356] = A[108];
    A[368] = 0.0000000000000000000000000;
    A[282] = 0.0000000000000000000000000;
    A[259] = 0.0000000000000000000000000;
    A[208] = 0.0000000000000000000000000;
    A[269] = 0.0000000000000000000000000;
    A[264] = 0.0000000000000000000000000;
    const double var_140 = var_135 + -1.0500000000000000444089210*var_49 + var_90 + 1.9000000000000001332267630*var_109 + var_94;
    A[241] = 0.0000000000000000000000000;
    A[345] = 0.0000000000000000000000000;
    A[37] = 0.0000000000000000000000000;
    A[29] = 0.0000000000000000000000000;
    A[15] = 0.0000000000000000000000000;
    A[283] = 0.0000000000000000000000000;
    A[25] = 0.0750000000000000111022302*var_133*var_8*var_99/(var_9*var_9*var_9*var_9);
    A[26] = A[25];
    A[335] = A[106];
    A[143] = A[67];
    A[346] = 0.0000000000000000000000000;
    A[196] = 0.0000000000000000000000000;
    A[36] = 0.0000000000000000000000000;
    A[1] = 0.1750000000000000166533454*var_103*var_8/(var_9*var_9*var_9*var_9);
    A[230] = A[1];
    A[289] = 0.0000000000000000000000000;
    A[270] = A[3];
    A[32] = 0.0000000000000000000000000;
    A[126] = A[63];
    A[232] = A[22];
    A[160] = A[8];
    A[112] = 0.0000000000000000000000000;
    A[358] = A[148];
    A[191] = 0.0000000000000000000000000;
    A[295] = A[65];
    A[388] = 0.0000000000000000000000000;
    A[349] = 0.0000000000000000000000000;
    A[79] = 0.0000000000000000000000000;
    A[18] = 0.0000000000000000000000000;
    A[322] = 0.0000000000000000000000000;
    A[186] = A[129];
    A[265] = 0.0000000000000000000000000;
    A[197] = 0.0000000000000000000000000;
    A[396] = A[129];
    A[397] = A[89];
    A[41] = A[22];
    A[66] = A[65];
    A[224] = 0.0000000000000000000000000;
    A[54] = 0.0000000000000000000000000;
    A[124] = A[86];
    A[20] = A[1];
    A[331] = A[25];
    A[80] = A[3];
    A[78] = 0.0000000000000000000000000;
    A[134] = 0.0000000000000000000000000;
    A[147] = A[63];
    A[91] = 0.0000000000000000000000000;
    A[135] = 0.0000000000000000000000000;
    A[348] = 0.0000000000000000000000000;
    A[88] = A[67];
    A[263] = 0.0000000000000000000000000;
    A[103] = A[65];
    A[6] = 0.7500000000000000000000000*var_137*var_8/(var_9*var_9*var_9*var_9);
    A[216] = A[6];
    A[382] = 0.0000000000000000000000000;
    A[211] = A[1];
    A[278] = A[68];
    A[394] = A[89];
    A[116] = 0.0000000000000000000000000;
    A[171] = 0.0000000000000000000000000;
    A[12] = 0.0000000000000000000000000;
    A[182] = 0.0000000000000000000000000;
    A[375] = A[108];
    A[44] = 0.7500000000000000000000000*var_140*var_8/(var_9*var_9*var_9*var_9);
    A[280] = 0.0000000000000000000000000;
    A[329] = 0.0000000000000000000000000;
    A[302] = 0.0000000000000000000000000;
    A[123] = A[65];
    A[235] = A[25];
    A[19] = 0.0000000000000000000000000;
    A[199] = 0.0000000000000000000000000;
    A[226] = 0.0000000000000000000000000;
    A[281] = 0.0000000000000000000000000;
    A[31] = 0.0000000000000000000000000;
    A[313] = A[65];
    A[165] = A[108];
    const double var_141 = 0.9500000000000000666133815*var_120 + 0.9000000000000000222044605*var_81 + 0.9250000000000000444089210*var_55 + 1.3750000000000000000000000*var_49 + var_117;
    A[46] = 1.5000000000000000000000000*var_141*var_8/(var_9*var_9*var_9*var_9);
    A[332] = A[46];
    A[237] = A[27];
    A[267] = 0.0000000000000000000000000;
    A[72] = 0.0000000000000000000000000;
    A[271] = A[23];
    A[141] = A[27];
    A[84] = A[63];
    A[372] = A[47];
    A[57] = 0.0000000000000000000000000;
    A[352] = A[47];
    A[115] = 0.0000000000000000000000000;
    A[234] = A[24];
    A[359] = A[89];
    A[194] = 0.0000000000000000000000000;
    A[93] = 0.0000000000000000000000000;
    A[118] = 0.0000000000000000000000000;
    A[144] = A[67];
    A[87] = A[67];
    A[367] = 0.0000000000000000000000000;
    A[311] = A[25];
    A[82] = A[44];
    A[317] = A[107];
    A[213] = A[3];
    A[153] = 0.0000000000000000000000000;
    A[255] = A[45];
    A[95] = 0.0000000000000000000000000;
    A[339] = A[129];
    A[52] = 0.0000000000000000000000000;
    A[258] = A[47];
    A[377] = A[148];
    A[190] = 0.0000000000000000000000000;
    A[145] = A[107];
    A[354] = A[67];
    A[175] = 0.0000000000000000000000000;
    A[350] = A[7];
    A[180] = 0.0000000000000000000000000;
    A[198] = 0.0000000000000000000000000;
    A[16] = 0.0000000000000000000000000;
    A[59] = 0.0000000000000000000000000;
    A[39] = 0.0000000000000000000000000;
    A[195] = 0.0000000000000000000000000;
    A[73] = 0.0000000000000000000000000;
    A[385] = 0.0000000000000000000000000;
    A[256] = A[46];
    A[326] = 0.0000000000000000000000000;
    A[381] = 0.0000000000000000000000000;
    A[341] = 0.0000000000000000000000000;
    A[217] = A[7];
    A[371] = A[28];
    A[304] = 0.0000000000000000000000000;
    A[205] = 0.0000000000000000000000000;
    A[373] = A[68];
    A[13] = 0.0000000000000000000000000;
    A[185] = A[69];
    A[318] = A[108];
    A[276] = A[65];
    A[253] = A[43];
    A[98] = 0.0000000000000000000000000;
    A[254] = A[44];
    A[85] = A[65];
    A[140] = A[7];
    A[393] = A[69];
    A[319] = A[69];
    A[156] = 0.0000000000000000000000000;
    A[386] = 0.0000000000000000000000000;
    A[178] = 0.0000000000000000000000000;
    A[284] = 0.0000000000000000000000000;
    A[121] = A[25];
    A[10] = 0.0000000000000000000000000;
    A[152] = 0.0000000000000000000000000;
    A[117] = 0.0000000000000000000000000;
    A[33] = 0.0000000000000000000000000;
    A[113] = 0.0000000000000000000000000;
    A[294] = A[63];
    A[220] = 0.0000000000000000000000000;
    A[53] = 0.0000000000000000000000000;
    A[164] = A[67];
    A[40] = A[2];
    A[366] = 0.0000000000000000000000000;
    A[137] = 0.0000000000000000000000000;
    A[357] = A[63];
    A[301] = 0.0000000000000000000000000;
    A[243] = 0.0000000000000000000000000;
    A[189] = 16.1999999999999992894572642*var_132*var_8/(var_9*var_9*var_9*var_9);
    A[399] = A[189];
    A[376] = A[108];
    A[214] = A[3];
    A[336] = A[63];
    A[207] = 0.0000000000000000000000000;
    A[268] = 0.0000000000000000000000000;
    A[340] = 0.0000000000000000000000000;
    A[138] = 0.0000000000000000000000000;
    A[155] = 0.0000000000000000000000000;
    A[102] = A[45];
    A[245] = 0.0000000000000000000000000;
    A[176] = 0.0000000000000000000000000;
    A[81] = A[24];
    A[168] = A[63];
    A[391] = 0.0000000000000000000000000;
    A[184] = A[89];
    A[58] = 0.0000000000000000000000000;
    A[390] = 0.0000000000000000000000000;
    A[223] = 0.0000000000000000000000000;
    A[266] = 0.0000000000000000000000000;
    A[327] = 0.0000000000000000000000000;
    A[159] = 0.0000000000000000000000000;
    A[50] = 0.0000000000000000000000000;
    A[325] = 0.0000000000000000000000000;
    A[120] = A[6];
    A[204] = 0.0000000000000000000000000;
    A[136] = 0.0000000000000000000000000;
    A[347] = 0.0000000000000000000000000;
    A[337] = A[108];
    A[48] = A[47];
    A[370] = A[8];
    A[380] = 0.0000000000000000000000000;
    A[192] = 0.0000000000000000000000000;
    A[76] = 0.0000000000000000000000000;
    A[173] = 0.0000000000000000000000000;
    A[342] = 0.0000000000000000000000000;
    A[309] = 0.0000000000000000000000000;
    A[122] = A[46];
    A[101] = A[25];
    A[257] = A[47];
    A[169] = A[129];
    A[308] = 0.0000000000000000000000000;
    A[292] = A[44];
    A[328] = 0.0000000000000000000000000;
    A[298] = A[67];
    A[250] = A[2];
    A[379] = A[129];
    A[38] = 0.0000000000000000000000000;
    A[149] = A[89];
    A[222] = 0.0000000000000000000000000;
    A[166] = A[108];
    A[330] = A[6];
    A[389] = 0.0000000000000000000000000;
    A[105] = A[63];
    A[154] = 0.0000000000000000000000000;
    A[125] = A[106];
    A[131] = 0.0000000000000000000000000;
    A[128] = A[108];
    A[56] = 0.0000000000000000000000000;
    A[343] = 0.0000000000000000000000000;
    A[158] = 0.0000000000000000000000000;
    A[9] = 0.0000000000000000000000000;
    A[387] = 0.0000000000000000000000000;
    A[392] = 0.0000000000000000000000000;
    A[247] = 0.0000000000000000000000000;
    A[174] = 0.0000000000000000000000000;
    A[236] = A[25];
    A[323] = 0.0000000000000000000000000;
    A[314] = A[65];
  }

  void tabulate_tensor(double* const A,
                       const double* const* w,
                       const ufc::cell& c,
                       unsigned int num_quadrature_points,
                       const double* const* quadrature_points,
                       const double* quadrature_weights) const
  {
    assert(0 && "This function is not implemented!");
  }
};

extern "C" ufc::cell_integral* newExcafeCellIntegral_0()
{
  return new ExcafeCellIntegral_0();
}
