#include <cassert>
#include <cassert>
#include <cmath>
#include <ufc.h>

// Common sub-expression elimination pass took 1 minute and 51.12 seconds (wall clock).

class ExcafeCellIntegral_0 : public ufc::cell_integral
{
public:
  void tabulate_tensor(double* const A, const double* const* w, const ufc::cell& c) const
  {
    const double * const * x = c.coordinates;

    const double var_0 = w[1][4]*w[2][0] + w[1][0]*w[2][4];
    const double var_1 = var_0*w[0][0] + w[0][4]*w[1][0]*w[2][0];
    const double var_2 = w[1][3]*w[2][2] + w[1][2]*w[2][3];
    const double var_3 = w[1][2]*w[2][1] + w[1][1]*w[2][2];
    const double var_4 = w[1][2]*w[2][4] + w[1][4]*w[2][2];
    const double var_5 = var_4*w[0][1] + var_3*w[0][4];
    const double var_6 = w[1][3]*w[2][0] + w[1][0]*w[2][3];
    const double var_7 = -0.1333333333333333314829616*var_6;
    const double var_8 = -1.0000000000000000000000000*x[0][1];
    const double var_9 = x[2][1] + var_8;
    const double var_10 = -1.0000000000000000000000000*x[0][0];
    const double var_11 = x[1][0] + var_10;
    const double var_12 = x[1][1] + var_8;
    const double var_13 = x[2][0] + var_10;
    const double var_14 = var_11*var_9 + -1.0000000000000000000000000*var_12*var_13;
    const double var_15 = std::abs(var_14);
    const double var_16 = w[1][1]*w[2][0] + w[1][0]*w[2][1];
    const double var_17 = w[1][0]*w[2][2] + w[1][2]*w[2][0];
    const double var_18 = var_3*w[0][0] + var_17*w[0][1] + var_16*w[0][2];
    const double var_19 = 0.0027777777777777778837887*var_18;
    const double var_20 = w[0][0] + w[0][1];
    const double var_21 = -0.1666666666666666574148081*var_20 + w[0][2];
    const double var_22 = 0.0416666666666666643537020*var_21*w[1][2]*w[2][2] + var_19;
    const double var_23 = w[0][1] + w[0][2];
    const double var_24 = w[0][0] + -0.1666666666666666574148081*var_23;
    const double var_25 = 0.0416666666666666643537020*var_24*w[1][0]*w[2][0];
    const double var_26 = w[0][3]*w[1][4] + w[0][4]*w[1][3];
    const double var_27 = 2.0000000000000000000000000*w[0][3];
    const double var_28 = w[0][5] + var_27;
    const double var_29 = 0.0416666666666666643537020*w[0][0];
    const double var_30 = -0.0083333333333333332176851*w[0][2];
    const double var_31 = -1.0000000000000000000000000*w[0][4] + 0.1666666666666666574148081*w[0][1];
    const double var_32 = 0.1000000000000000055511151*var_31;
    const double var_33 = -0.0666666666666666657414808*var_28 + var_30 + var_32 + var_29;
    const double var_34 = -0.1333333333333333314829616*w[0][4] + 0.0416666666666666643537020*w[0][1];
    const double var_35 = 0.1666666666666666574148081*w[0][0] + -1.0000000000000000000000000*w[0][3];
    const double var_36 = 0.1000000000000000055511151*var_35;
    const double var_37 = var_34 + -0.0666666666666666657414808*w[0][5] + var_30 + var_36;
    const double var_38 = 0.6666666666666666296592325*w[0][0];
    const double var_39 = -0.5000000000000000000000000*w[0][1] + -1.0000000000000000000000000*var_38;
    const double var_40 = w[0][0] + w[0][2];
    const double var_41 = w[0][1] + var_40;
    const double var_42 = -0.2000000000000000111022302*w[0][5] + -0.0250000000000000013877788*var_20 + 0.2500000000000000000000000*w[0][2];
    const double var_43 = w[0][5]*w[1][3] + w[0][3]*w[1][5];
    const double var_44 = w[0][4]*w[1][4];
    const double var_45 = 0.8000000000000000444089210*var_44 + -0.1333333333333333314829616*w[0][1]*w[1][4] + 0.4000000000000000222044605*var_43;
    const double var_46 = w[0][4]*w[1][5] + w[0][5]*w[1][4];
    const double var_47 = w[0][3]*w[1][3];
    const double var_48 = 0.8000000000000000444089210*var_47 + 0.4000000000000000222044605*var_46;
    const double var_49 = w[0][5]*w[1][5];
    const double var_50 = var_48 + 0.4000000000000000222044605*var_49 + var_37*w[1][1] + 0.2000000000000000111022302*var_39*w[1][3] + 0.5333333333333333259318465*var_26 + -0.1000000000000000055511151*w[0][0]*w[1][4] + var_45 + 0.3333333333333333148296163*var_42*w[1][2] + -0.0666666666666666657414808*var_41*w[1][5] + var_33*w[1][0];
    const double var_51 = 2.0000000000000000000000000*w[0][5];
    const double var_52 = w[0][3] + var_51;
    const double var_53 = 0.0416666666666666643537020*w[0][2];
    const double var_54 = -0.0083333333333333332176851*w[0][0];
    const double var_55 = var_32 + var_53 + -0.0666666666666666657414808*var_52 + var_54;
    const double var_56 = -1.0000000000000000000000000*w[0][5] + 0.1666666666666666574148081*w[0][2];
    const double var_57 = 0.1000000000000000055511151*var_56;
    const double var_58 = -0.0666666666666666657414808*w[0][3] + var_57 + var_34 + var_54;
    const double var_59 = -0.2000000000000000111022302*w[0][3] + 0.2500000000000000000000000*w[0][0] + -0.0250000000000000013877788*var_23;
    const double var_60 = var_51 + -0.3333333333333333148296163*w[0][2];
    const double var_61 = var_26 + var_60*w[1][5];
    const double var_62 = 0.4000000000000000222044605*var_61;
    const double var_63 = w[0][1]*w[1][5] + w[0][2]*w[1][4];
    const double var_64 = var_55*w[1][2] + 0.5333333333333333259318465*var_46 + -0.0666666666666666657414808*var_41*w[1][3] + -0.1000000000000000055511151*var_63 + var_62 + 0.3333333333333333148296163*var_59*w[1][0] + var_58*w[1][1] + 0.4000000000000000222044605*var_47 + var_45;
    const double var_65 = var_58*w[2][1] + var_55*w[2][2] + 0.3333333333333333148296163*var_59*w[2][0];
    const double var_66 = w[1][4]*w[2][1] + w[1][1]*w[2][4];
    const double var_67 = var_4*w[0][2] + w[0][4]*w[1][2]*w[2][2];
    const double var_68 = var_37*w[2][1] + 0.3333333333333333148296163*var_42*w[2][2] + var_33*w[2][0];
    const double var_69 = -0.1333333333333333314829616*w[0][1]*w[2][4];
    const double var_70 = var_68 + -0.1000000000000000055511151*w[0][0]*w[2][4] + var_69;
    const double var_71 = w[1][1]*w[2][1];
    const double var_72 = 2.6666666666666665186369300*w[0][5] + -0.5000000000000000000000000*w[0][2];
    const double var_73 = 4.0000000000000000000000000*var_26 + var_72*w[1][5];
    const double var_74 = 16.0000000000000000000000000*w[0][4]*w[1][4] + 4.0000000000000000000000000*var_46 + 2.0000000000000000000000000*var_43 + 2.6666666666666665186369300*w[0][3]*w[1][3] + -0.6666666666666666296592325*w[0][1]*w[1][5] + var_73;
    const double var_75 = w[0][3] + w[0][5];
    const double var_76 = var_3 + var_16;
    const double var_77 = var_0 + var_4 + -0.5000000000000000000000000*var_76;
    const double var_78 = var_76*w[0][4] + var_77*w[0][1] + var_40*var_66;
    const double var_79 = var_4*w[0][5] + var_0*w[0][3];
    const double var_80 = var_17 + var_3;
    const double var_81 = w[1][2]*w[2][2];
    const double var_82 = w[1][0]*w[2][0];
    const double var_83 = var_82 + var_71;
    const double var_84 = var_81 + 0.5000000000000000000000000*var_83 + -0.1000000000000000055511151*var_80 + 0.2000000000000000111022302*var_16;
    const double var_85 = var_17 + var_16;
    const double var_86 = var_81 + var_71;
    const double var_87 = var_82 + -0.1000000000000000055511151*var_85 + 0.2000000000000000111022302*var_3 + 0.5000000000000000000000000*var_86;
    const double var_88 = var_17 + 0.2000000000000000111022302*w[1][1]*w[2][1];
    const double var_89 = var_40*var_88 + var_3*w[0][2] + var_16*w[0][0];
    const double var_90 = var_87*w[0][5] + var_84*w[0][3] + -0.2500000000000000000000000*var_89;
    const double var_91 = 0.2000000000000000111022302*var_74*w[2][4] + -0.1333333333333333314829616*var_66*var_75 + 0.0083333333333333332176851*var_78 + var_50*w[2][3] + var_70*w[1][3] + var_65*w[1][5] + var_64*w[2][5] + 0.0833333333333333287074041*var_90 + -0.1000000000000000055511151*var_79 + 0.1666666666666666574148081*var_67 + 0.0500000000000000027755576*var_71*w[0][4];
    const double var_92 = var_0*w[0][2] + var_17*w[0][4] + var_4*w[0][0];
    const double var_93 = -1.0000000000000000000000000*w[0][1]*w[1][4]*w[2][4] + var_31*var_66 + -0.2500000000000000000000000*var_92;
    const double var_94 = var_25 + var_22 + 0.3333333333333333148296163*var_91 + 0.1000000000000000055511151*var_93 + 0.0555555555555555524716027*var_1;
    A[2] = 0.0095238095238095246686250*var_15*var_94;
    const double var_95 = 0.0011904761904761905835781*w[1][0]*w[2][0] + 0.0317460317460317442694873*w[1][3]*w[2][3] + -0.0039682539682539680336859*var_6 + -0.0079365079365079360673718*var_3;
    const double var_96 = w[1][1]*w[2][3] + w[1][3]*w[2][1];
    const double var_97 = var_96*w[0][1] + w[0][3]*w[1][1]*w[2][1];
    const double var_98 = w[0][1] + -0.1666666666666666574148081*var_40;
    const double var_99 = 0.0416666666666666643537020*var_98*w[1][1]*w[2][1];
    const double var_100 = w[0][4] + var_27;
    const double var_101 = -0.0083333333333333332176851*w[0][1];
    const double var_102 = var_57 + -0.0666666666666666657414808*var_100 + var_29 + var_101;
    const double var_103 = w[0][4] + var_51;
    const double var_104 = -0.0666666666666666657414808*var_103 + var_53 + var_36 + var_101;
    const double var_105 = -0.2000000000000000111022302*w[0][4] + 0.2500000000000000000000000*w[0][1] + -0.0250000000000000013877788*var_40;
    const double var_106 = var_38 + 0.5000000000000000000000000*w[0][2];
    const double var_107 = 0.3333333333333333148296163*var_105*w[1][1] + var_48 + -0.1000000000000000055511151*w[0][0]*w[1][5] + 0.4000000000000000222044605*var_44 + var_62 + -0.0666666666666666657414808*var_41*w[1][4] + 0.5333333333333333259318465*var_43 + -0.2000000000000000111022302*var_106*w[1][3] + var_104*w[1][2] + var_102*w[1][0];
    const double var_108 = var_104*w[2][2] + var_102*w[2][0] + 0.3333333333333333148296163*var_105*w[2][1];
    const double var_109 = var_2*w[0][2] + w[0][3]*w[1][2]*w[2][2];
    const double var_110 = var_7 + -0.1000000000000000055511151*var_96 + 0.0833333333333333287074041*var_84;
    const double var_111 = 2.6666666666666665186369300*w[0][4] + var_39;
    const double var_112 = -0.6666666666666666296592325*w[0][0]*w[1][5] + 2.0000000000000000000000000*var_46 + var_111*w[1][4] + 4.0000000000000000000000000*var_43 + 16.0000000000000000000000000*w[0][3]*w[1][3] + var_73;
    const double var_113 = -0.1000000000000000055511151*var_2;
    const double var_114 = var_81 + var_82;
    const double var_115 = 0.2000000000000000111022302*var_17 + 0.5000000000000000000000000*var_114 + -0.1000000000000000055511151*var_76 + var_71;
    const double var_116 = 0.0833333333333333287074041*var_115;
    const double var_117 = var_116 + var_7 + var_113;
    const double var_118 = var_17*w[0][2] + var_16*w[0][1] + var_23*var_3;
    const double var_119 = var_96 + -0.5000000000000000000000000*var_85 + var_2;
    const double var_120 = -0.5000000000000000000000000*w[1][0]*w[2][0] + var_6;
    const double var_121 = var_85*w[0][3] + var_119*w[0][0] + var_120*var_23;
    const double var_122 = var_108*w[1][5] + var_110*w[0][4] + var_68*w[1][4] + var_50*w[2][4] + -0.0208333333333333321768510*var_118 + 0.0500000000000000027755576*var_82*w[0][3] + var_107*w[2][5] + 0.0083333333333333332176851*var_121 + 0.2000000000000000111022302*var_112*w[2][3] + var_117*w[0][5] + 0.1666666666666666574148081*var_109;
    const double var_123 = var_3*w[0][3] + var_2*w[0][1] + var_96*w[0][2];
    const double var_124 = -0.2500000000000000000000000*var_123 + var_35*var_6 + -1.0000000000000000000000000*w[0][0]*w[1][3]*w[2][3];
    const double var_125 = var_99 + var_22 + 0.1000000000000000055511151*var_124 + 0.0555555555555555524716027*var_97 + 0.3333333333333333148296163*var_122;
    const double var_126 = -0.4000000000000000222044605*var_96 + 0.3333333333333333148296163*var_4 + -0.2666666666666666629659233*var_0;
    const double var_127 = var_3*w[0][1] + var_17*w[0][0] + var_16*var_20;
    const double var_128 = w[1][5]*w[2][1] + w[1][1]*w[2][5];
    const double var_129 = w[0][5]*w[1][1]*w[2][1] + var_128*w[0][1];
    const double var_130 = w[1][5]*w[2][0] + w[1][0]*w[2][5];
    const double var_131 = w[0][5]*w[1][0]*w[2][0] + var_130*w[0][0];
    const double var_132 = -0.1333333333333333314829616*w[0][2]*w[2][5];
    const double var_133 = var_132 + -0.1000000000000000055511151*w[0][0]*w[2][5] + var_108;
    const double var_134 = var_132 + -0.1000000000000000055511151*w[0][1]*w[2][5] + var_65;
    const double var_135 = w[1][2]*w[2][5] + w[1][5]*w[2][2];
    const double var_136 = -0.1333333333333333314829616*var_135;
    const double var_137 = var_116 + var_136 + -0.1000000000000000055511151*var_130;
    const double var_138 = var_136 + 0.0833333333333333287074041*var_87 + -0.1000000000000000055511151*var_128;
    const double var_139 = -0.5000000000000000000000000*var_80 + var_130 + var_128;
    const double var_140 = var_135 + -0.5000000000000000000000000*w[1][2]*w[2][2];
    const double var_141 = var_80*w[0][5] + var_140*var_20 + var_139*w[0][2];
    const double var_142 = var_44 + var_47;
    const double var_143 = 4.0000000000000000000000000*w[0][5]*w[1][5] + var_43 + 0.6666666666666666296592325*var_142 + var_46;
    const double var_144 = var_26 + 2.0000000000000000000000000*var_143;
    const double var_145 = -0.0208333333333333321768510*var_127 + 0.0500000000000000027755576*var_81*w[0][5] + var_138*w[0][4] + var_107*w[2][3] + var_137*w[0][3] + var_133*w[1][3] + var_64*w[2][4] + 0.4000000000000000222044605*var_144*w[2][5] + 0.1666666666666666574148081*var_131 + 0.0083333333333333332176851*var_141 + var_134*w[1][4];
    const double var_146 = var_130*w[0][1] + var_128*w[0][0] + var_16*w[0][5];
    const double var_147 = var_135*var_56 + -1.0000000000000000000000000*w[0][2]*w[1][5]*w[2][5] + -0.2500000000000000000000000*var_146;
    const double var_148 = var_25 + var_19 + var_99 + 0.1000000000000000055511151*var_147 + 0.0555555555555555524716027*var_129 + 0.3333333333333333148296163*var_145;
    const double var_149 = var_67 + var_129;
    const double var_150 = -0.0039682539682539680336859*var_66 + -0.0079365079365079360673718*var_17 + 0.0317460317460317442694873*w[1][4]*w[2][4] + 0.0011904761904761905835781*w[1][1]*w[2][1];
    const double var_151 = w[1][4]*w[2][3] + w[1][3]*w[2][4];
    const double var_152 = 0.0833333333333333287074041*var_81 + var_150 + 0.0158730158730158721347436*var_151 + 0.0011904761904761905835781*var_16 + var_95;
    const double var_153 = 0.0011904761904761905835781*w[1][2]*w[2][2] + -0.0039682539682539680336859*var_135 + -0.0079365079365079360673718*var_16 + 0.0317460317460317442694873*w[1][5]*w[2][5];
    const double var_154 = w[1][4]*w[2][5] + w[1][5]*w[2][4];
    const double var_155 = 0.0011904761904761905835781*var_3 + 0.0833333333333333287074041*var_82 + var_150 + var_153 + 0.0158730158730158721347436*var_154;
    const double var_156 = 0.4000000000000000222044605*w[1][4]*w[2][4];
    const double var_157 = var_110 + -0.1000000000000000055511151*var_0;
    const double var_158 = var_3*w[0][5] + var_128*w[0][2];
    const double var_159 = var_5 + var_158;
    const double var_160 = var_4*w[0][4];
    const double var_161 = w[2][5] + w[2][3];
    const double var_162 = var_135 + var_130;
    const double var_163 = var_28*var_96 + var_128*var_52 + 4.0000000000000000000000000*var_161*var_43 + -0.8000000000000000444089210*var_162*w[0][3];
    const double var_164 = var_44 + 0.1333333333333333314829616*var_43;
    A[1] = 0.0095238095238095246686250*var_148*var_15;
    A[3] = A[1];
    const double var_165 = w[1][3]*w[2][5] + w[1][5]*w[2][3];
    const double var_166 = -0.4000000000000000222044605*w[1][5]*w[2][5];
    const double var_167 = -0.4000000000000000222044605*w[1][3]*w[2][3];
    const double var_168 = -0.2666666666666666629659233*var_165 + 0.0250000000000000013877788*var_76 + -0.1666666666666666574148081*var_71 + var_166 + -0.0166666666666666664353702*var_17 + var_167;
    const double var_169 = var_47 + 0.1333333333333333314829616*var_46;
    const double var_170 = var_6*w[0][0] + w[0][3]*w[1][0]*w[2][0];
    const double var_171 = -0.0190476190476190493372499*var_6*w[0][3] + -0.0079365079365079360673718*var_123 + 0.1904761904761904656169236*var_169*w[2][3] + 0.0035714285714285713170535*var_170;
    const double var_172 = w[0][5]*w[1][2]*w[2][2] + var_135*w[0][2];
    const double var_173 = 0.1333333333333333314829616*var_26 + var_49;
    const double var_174 = 0.0035714285714285713170535*var_172 + 0.1904761904761904656169236*var_173*w[2][5] + -0.0079365079365079360673718*var_146 + -0.0190476190476190493372499*var_135*w[0][5];
    const double var_175 = 0.1250000000000000000000000*var_135 + -0.0357142857142857123031732*w[1][2]*w[2][2];
    const double var_176 = -0.1428571428571428492126927*w[1][0]*w[2][0] + 0.5000000000000000000000000*var_6;
    const double var_177 = 0.0158730158730158721347436*var_165 + 0.0833333333333333287074041*var_71 + var_153 + var_95 + 0.0011904761904761905835781*var_17;
    const double var_178 = 0.3333333333333333148296163*var_47 + 0.2000000000000000111022302*var_46;
    const double var_179 = w[0][3] + 0.6666666666666666296592325*w[0][5];
    const double var_180 = var_161*var_44 + -1.0000000000000000000000000*var_179*var_2 + -0.3333333333333333148296163*var_103*var_6 + -1.0000000000000000000000000*var_130*w[0][5];
    const double var_181 = var_96*w[0][0] + var_16*w[0][3];
    const double var_182 = var_181 + var_158;
    const double var_183 = var_131 + var_109;
    const double var_184 = 0.2000000000000000111022302*var_26 + 0.3333333333333333148296163*w[0][5]*w[1][5];
    const double var_185 = 4.0000000000000000000000000*var_184 + -0.2000000000000000111022302*var_106*w[1][4];
    const double var_186 = var_113 + var_137;
    const double var_187 = var_168*var_40 + var_133*w[1][4] + 0.1250000000000000000000000*var_183 + 0.4000000000000000222044605*var_180 + -0.0833333333333333287074041*var_182 + var_185*w[2][3] + var_107*w[2][4] + var_186*w[0][4] + 0.3333333333333333148296163*var_163;
    const double var_188 = var_17*w[0][3] + var_2*w[0][0];
    const double var_189 = var_17*w[0][5] + var_130*w[0][2];
    const double var_190 = var_189 + var_188;
    const double var_191 = var_97 + var_129;
    const double var_192 = 0.0027777777777777778837887*var_190 + var_171 + 0.0476190476190476164042309*var_187 + var_174 + 0.1904761904761904656169236*var_178*w[2][5] + var_177*w[0][1] + 0.0357142857142857123031732*var_191 + 0.0222222222222222230703093*var_175*w[0][0] + 0.0055555555555555557675773*var_176*w[0][2];
    const double var_193 = var_0*w[0][1] + var_16*w[0][4];
    const double var_194 = var_189 + var_193;
    A[4] = 0.0666666666666666657414808*var_15*var_192;
    const double var_195 = w[2][4] + w[2][5];
    const double var_196 = -1.0000000000000000000000000*var_156;
    const double var_197 = -0.0166666666666666664353702*var_3 + var_196 + -0.1666666666666666574148081*var_82 + var_166 + -0.2666666666666666629659233*var_154 + 0.0250000000000000013877788*var_85;
    const double var_198 = 0.3333333333333333148296163*var_0 + -0.2666666666666666629659233*var_4 + -0.4000000000000000222044605*var_128;
    const double var_199 = -0.1000000000000000055511151*w[0][2]*w[2][4] + var_134 + var_69;
    const double var_200 = var_138 + -0.1000000000000000055511151*var_4;
    const double var_201 = var_0*w[0][4];
    const double var_202 = var_135 + var_128;
    const double var_203 = -1.0000000000000000000000000*var_160 + var_195*var_47 + -0.3333333333333333148296163*var_52*var_66 + -0.6666666666666666296592325*var_202*w[0][4];
    const double var_204 = 0.6666666666666666296592325*var_201 + 0.4000000000000000222044605*var_203 + var_64*w[2][3] + 4.0000000000000000000000000*var_184*w[2][4] + var_198*w[0][5] + 1.3333333333333332593184650*var_195*var_46 + var_199*w[1][3] + -0.0833333333333333287074041*var_194 + 0.1250000000000000000000000*var_149 + var_197*var_23 + 0.3333333333333333148296163*var_103*var_130 + var_200*w[0][3];
    const double var_205 = w[0][4]*w[1][1]*w[2][1] + var_66*w[0][1];
    const double var_206 = 0.1904761904761904656169236*var_164*w[2][4] + -0.0190476190476190493372499*var_66*w[0][4] + 0.0035714285714285713170535*var_205 + -0.0079365079365079360673718*var_92;
    const double var_207 = 0.3333333333333333148296163*var_44 + 0.2000000000000000111022302*var_43;
    const double var_208 = var_131 + var_1;
    const double var_209 = w[2][4] + w[2][3];
    const double var_210 = var_196 + 0.0250000000000000013877788*var_80 + -0.1666666666666666574148081*var_81 + -0.2666666666666666629659233*var_151 + -0.0166666666666666664353702*var_16 + var_167;
    const double var_211 = var_96 + var_6;
    const double var_212 = 0.2000000000000000111022302*var_39*w[2][3] + 0.4000000000000000222044605*var_209*w[0][5] + var_70;
    const double var_213 = var_97 + var_1;
    const double var_214 = var_5 + var_188;
    const double var_215 = -0.4000000000000000222044605*var_201 + -0.0833333333333333287074041*var_214 + -0.1333333333333333314829616*var_28*var_66 + var_50*w[2][5] + 0.6666666666666666296592325*var_160 + 4.0000000000000000000000000*var_207*w[2][3] + 1.3333333333333332593184650*var_209*var_26 + var_20*var_210 + 0.1250000000000000000000000*var_213 + 0.3333333333333333148296163*var_100*var_2 + var_212*w[1][5] + var_126*w[0][3] + var_157*w[0][5] + -0.2666666666666666629659233*var_211*w[0][4];
    const double var_216 = var_67 + var_109;
    const double var_217 = var_193 + var_181;
    const double var_218 = 0.5000000000000000000000000*var_66 + -0.1428571428571428492126927*w[1][1]*w[2][1];
    const double var_219 = var_218*w[0][0] + var_176*w[0][1];
    const double var_220 = 0.0027777777777777778837887*var_217 + 0.1904761904761904656169236*var_178*w[2][4] + var_171 + var_206 + 0.0357142857142857123031732*var_216 + var_152*w[0][2] + 0.0476190476190476164042309*var_215 + 0.0055555555555555557675773*var_219;
    A[8] = 0.0666666666666666657414808*var_15*var_220;
    A[6] = A[2];
    const double var_221 = var_155*w[0][0] + 0.0027777777777777778837887*var_159 + 0.0055555555555555557675773*var_218*w[0][2] + 0.0357142857142857123031732*var_208 + 0.0222222222222222230703093*var_175*w[0][1] + var_206 + var_174 + 0.0476190476190476164042309*var_204 + 0.1904761904761904656169236*var_207*w[2][5];
    A[0] = 0.0666666666666666657414808*var_15*var_221;
    A[5] = 0.0095238095238095246686250*var_125*var_15;
    A[7] = A[5];
  }

  void tabulate_tensor(double* const A,
                       const double* const* w,
                       const ufc::cell& c,
                       unsigned int num_quadrature_points,
                       const double* const* quadrature_points,
                       const double* quadrature_weights) const
  {
    assert(0 && "This function is not implemented!");
  }
};

extern "C" ufc::cell_integral* newExcafeCellIntegral_0()
{
  return new ExcafeCellIntegral_0();
}
