#include <cassert>
#include <cassert>
#include <cmath>
#include <ufc.h>

// Common sub-expression elimination pass took 0 minutes and 12.99 seconds (wall clock).

class ExcafeCellIntegral_0 : public ufc::cell_integral
{
public:
  void tabulate_tensor(double* const A, const double* const* w, const ufc::cell& c) const
  {
    const double * const * x = c.coordinates;

    const double var_0 = -1.0000000000000000000000000*x[0][1];
    const double var_1 = -1.0000000000000000000000000*x[0][0];
    const double var_2 = x[1][0] + var_1;
    const double var_3 = var_0 + x[2][1];
    const double var_4 = x[2][0] + var_1;
    const double var_5 = var_0 + x[1][1];
    const double var_6 = var_2*var_3 + -1.0000000000000000000000000*var_4*var_5;
    const double var_7 = std::abs(var_6);
    const double var_8 = w[1][1]*w[2][2] + w[1][2]*w[2][1];
    const double var_9 = w[0][1]*w[3][2] + w[0][2]*w[3][1];
    const double var_10 = var_8*w[0][2]*w[3][2] + var_9*w[1][2]*w[2][2];
    const double var_11 = w[1][1]*w[2][0] + w[1][0]*w[2][1];
    const double var_12 = w[0][1]*w[3][0] + w[0][0]*w[3][1];
    const double var_13 = var_12*w[1][0]*w[2][0] + var_11*w[0][0]*w[3][0];
    const double var_14 = w[1][2]*w[2][0] + w[1][0]*w[2][2];
    const double var_15 = var_11*w[0][2] + var_14*w[0][1] + var_8*w[0][0];
    const double var_16 = var_14*w[3][1];
    const double var_17 = var_11*w[3][2];
    const double var_18 = var_17 + var_16;
    const double var_19 = var_18*w[0][0] + var_9*w[1][0]*w[2][0] + var_15*w[3][0];
    const double var_20 = w[0][0]*w[1][0]*w[2][0]*w[3][0];
    const double var_21 = -0.0250000000000000013877788*var_19 + -0.3333333333333333148296163*var_20;
    const double var_22 = var_8*w[3][0];
    const double var_23 = var_16 + var_22;
    const double var_24 = var_23*w[0][2] + var_15*w[3][2] + var_12*w[1][2]*w[2][2];
    const double var_25 = w[0][2]*w[1][2]*w[2][2]*w[3][2];
    const double var_26 = -0.0666666666666666657414808*var_25 + -0.0166666666666666664353702*var_24;
    const double var_27 = w[0][2]*w[3][0] + w[0][0]*w[3][2];
    const double var_28 = var_14*w[0][2]*w[3][2] + var_27*w[1][2]*w[2][2];
    const double var_29 = var_8*w[0][1]*w[3][1] + var_9*w[1][1]*w[2][1];
    const double var_30 = -0.0666666666666666657414808*var_28 + 0.1666666666666666574148081*var_29;
    const double var_31 = var_14*w[0][0]*w[3][0] + var_27*w[1][0]*w[2][0];
    const double var_32 = var_11*w[0][1]*w[3][1] + var_12*w[1][1]*w[2][1];
    const double var_33 = -0.0666666666666666657414808*var_31 + 0.1666666666666666574148081*var_32;
    const double var_34 = var_14*var_27 + w[0][2]*w[1][0]*w[2][0]*w[3][2] + w[0][0]*w[1][2]*w[2][2]*w[3][0];
    const double var_35 = w[0][1]*w[1][1]*w[2][1]*w[3][1];
    const double var_36 = -0.0333333333333333328707404*var_34 + var_35;
    const double var_37 = -0.1000000000000000055511151*var_13 + var_21 + var_33 + 0.5000000000000000000000000*var_30 + -0.0250000000000000013877788*var_10 + var_26 + var_36;
    A[11] = 0.0031746031746031746004211*var_37*var_7;
    A[31] = A[11];
    const double var_38 = var_24 + var_19;
    const double var_39 = var_32 + var_29;
    const double var_40 = var_25 + var_20;
    const double var_41 = 0.1000000000000000055511151*var_34 + 0.3333333333333333148296163*var_40;
    const double var_42 = var_17 + var_22;
    const double var_43 = var_27*w[1][1]*w[2][1] + var_42*w[0][1] + var_15*w[3][1];
    const double var_44 = var_31 + var_28;
    const double var_45 = var_44 + var_43;
    const double var_46 = var_8*var_9 + w[0][2]*w[1][1]*w[2][1]*w[3][2] + w[0][1]*w[1][2]*w[2][2]*w[3][1];
    const double var_47 = w[0][1]*w[1][0]*w[2][0]*w[3][1] + var_11*var_12 + w[0][0]*w[1][1]*w[2][1]*w[3][0];
    const double var_48 = var_46 + var_47;
    const double var_49 = var_10 + var_13;
    const double var_50 = var_48 + var_49;
    const double var_51 = var_35 + var_41 + 0.1333333333333333314829616*var_45 + 0.3333333333333333148296163*var_39 + 0.1000000000000000055511151*var_38 + 0.2000000000000000111022302*var_50;
    A[23] = 0.0031746031746031746004211*var_51*var_7;
    A[33] = A[23];
    const double var_52 = var_20 + var_35;
    const double var_53 = var_31 + var_29;
    const double var_54 = var_32 + var_13;
    const double var_55 = var_10 + var_28;
    const double var_56 = var_46 + var_34;
    const double var_57 = var_43 + var_19;
    const double var_58 = var_56 + -1.0000000000000000000000000*var_57;
    const double var_59 = -0.0873015873015872967410900*var_52 + -0.0079365079365079360673718*var_53 + -0.0158730158730158721347436*var_54 + -0.0071428571428571426341070*var_47 + 0.0015873015873015873002105*var_24 + 0.0055555555555555557675773*var_55 + 0.0206349206349206344690561*w[0][2]*w[1][2]*w[2][2]*w[3][2] + 0.0007936507936507936501053*var_58;
    A[1] = 0.0083333333333333332176851*var_59*var_7;
    A[6] = A[1];
    const double var_60 = -0.0166666666666666664353702*var_19 + -0.0666666666666666657414808*var_20;
    const double var_61 = 0.5000000000000000000000000*var_24 + var_57;
    const double var_62 = 0.3333333333333333148296163*var_52 + 0.1000000000000000055511151*var_47;
    const double var_63 = -0.0083333333333333332176851*var_56 + -0.0222222222222222230703093*var_53 + -0.0333333333333333328707404*var_54 + -0.0111111111111111115351546*var_61 + -0.2500000000000000000000000*var_62 + 0.0277777777777777762358014*var_25;
    A[17] = 0.0095238095238095246686250*var_63*var_7;
    const double var_64 = 5.6666666666666660745477202*w[0][1]*w[1][1]*w[2][1]*w[3][1] + 0.0555555555555555524716027*var_43 + 0.1111111111111111049432054*var_48 + 0.0500000000000000027755576*var_44 + 0.2000000000000000111022302*var_40 + 0.5000000000000000000000000*var_39 + 0.0333333333333333328707404*var_34 + 0.0277777777777777762358014*var_38 + 0.0833333333333333287074041*var_49;
    const double var_65 = -0.0250000000000000013877788*var_43 + -0.3333333333333333148296163*var_35;
    const double var_66 = -0.0666666666666666657414808*var_10 + 0.1666666666666666574148081*var_31;
    const double var_67 = 0.1666666666666666574148081*var_13 + -0.0666666666666666657414808*var_29;
    const double var_68 = -0.0333333333333333328707404*var_46 + var_20;
    const double var_69 = var_65 + -0.1000000000000000055511151*var_32 + 0.5000000000000000000000000*var_66 + -0.0250000000000000013877788*var_28 + var_68 + var_26 + var_67;
    A[5] = 0.0031746031746031746004211*var_69*var_7;
    const double var_70 = var_34 + var_47;
    const double var_71 = var_28 + var_32;
    const double var_72 = var_10 + var_29;
    const double var_73 = var_24 + var_43;
    const double var_74 = 0.5000000000000000000000000*var_19 + var_73;
    const double var_75 = var_25 + var_35;
    const double var_76 = 0.1000000000000000055511151*var_46 + 0.3333333333333333148296163*var_75;
    const double var_77 = -0.0083333333333333332176851*var_70 + 0.0277777777777777762358014*var_20 + -0.0333333333333333328707404*var_72 + -0.0222222222222222230703093*var_71 + -0.2500000000000000000000000*var_76 + -0.0111111111111111115351546*var_74;
    A[3] = 0.0095238095238095246686250*var_7*var_77;
    const double var_78 = -0.3333333333333333148296163*var_25 + -0.0250000000000000013877788*var_24;
    const double var_79 = -0.0250000000000000013877788*var_13 + 0.5000000000000000000000000*var_33 + var_30 + var_78 + -0.1000000000000000055511151*var_10 + var_60 + var_36;
    const double var_80 = var_38 + 0.5000000000000000000000000*var_43;
    const double var_81 = 0.0277777777777777762358014*var_35 + -0.0083333333333333332176851*var_48 + -0.2500000000000000000000000*var_41 + -0.0333333333333333328707404*var_44 + -0.0111111111111111115351546*var_80 + -0.0222222222222222230703093*var_49;
    A[10] = 0.0095238095238095246686250*var_7*var_81;
    const double var_82 = var_48 + var_35;
    const double var_83 = 0.1333333333333333314829616*var_82 + var_44 + 2.0000000000000000000000000*var_40 + 0.2000000000000000111022302*var_80 + 0.1000000000000000055511151*var_39 + 0.8000000000000000444089210*var_34 + 0.3333333333333333148296163*var_49;
    A[28] = 0.0031746031746031746004211*var_7*var_83;
    const double var_84 = 0.1666666666666666574148081*var_10 + -0.0666666666666666657414808*var_32;
    const double var_85 = 0.1666666666666666574148081*var_28 + -0.0666666666666666657414808*var_13;
    const double var_86 = var_25 + -0.0333333333333333328707404*var_47;
    const double var_87 = 0.5000000000000000000000000*var_85 + var_65 + var_84 + var_86 + -0.0250000000000000013877788*var_31 + -0.1000000000000000055511151*var_29 + var_60;
    A[15] = 0.0031746031746031746004211*var_7*var_87;
    const double var_88 = -0.0166666666666666664353702*var_43 + -0.0666666666666666657414808*var_35;
    const double var_89 = -0.0250000000000000013877788*var_32 + var_66 + var_68 + -0.1000000000000000055511151*var_28 + var_78 + var_88 + 0.5000000000000000000000000*var_67;
    A[4] = 0.0031746031746031746004211*var_7*var_89;
    const double var_90 = var_31 + var_13;
    const double var_91 = var_71 + var_70;
    const double var_92 = var_72 + var_19;
    const double var_93 = 0.1000000000000000055511151*var_73 + var_20 + 0.3333333333333333148296163*var_90 + var_76 + 0.2000000000000000111022302*var_91 + 0.1333333333333333314829616*var_92;
    A[29] = 0.0031746031746031746004211*var_7*var_93;
    A[34] = A[29];
    const double var_94 = -1.0000000000000000000000000*var_38 + var_48;
    A[7] = 0.0011904761904761905835781*var_64*var_7;
    const double var_95 = 0.1111111111111111049432054*var_70 + 0.0277777777777777762358014*var_73 + 0.5000000000000000000000000*var_90 + 0.0500000000000000027755576*var_72 + 0.0555555555555555524716027*var_19 + 0.0833333333333333287074041*var_71 + 5.6666666666666660745477202*w[0][0]*w[1][0]*w[2][0]*w[3][0] + 0.0333333333333333328707404*var_46 + 0.2000000000000000111022302*var_75;
    A[0] = 0.0011904761904761905835781*var_7*var_95;
    const double var_96 = 0.0206349206349206344690561*w[0][1]*w[1][1]*w[2][1]*w[3][1] + 0.0015873015873015873002105*var_43 + 0.0007936507936507936501053*var_94 + -0.0158730158730158721347436*var_44 + -0.0873015873015872967410900*var_40 + 0.0055555555555555557675773*var_39 + -0.0071428571428571426341070*var_34 + -0.0079365079365079360673718*var_49;
    A[2] = 0.0083333333333333332176851*var_7*var_96;
    A[12] = A[2];
    const double var_97 = var_56 + var_53;
    A[20] = A[15];
    const double var_98 = var_70 + -1.0000000000000000000000000*var_73;
    const double var_99 = 0.0007936507936507936501053*var_98 + -0.0158730158730158721347436*var_72 + 0.0015873015873015873002105*var_19 + 0.0055555555555555557675773*var_90 + 0.0206349206349206344690561*w[0][0]*w[1][0]*w[2][0]*w[3][0] + -0.0079365079365079360673718*var_71 + -0.0071428571428571426341070*var_46 + -0.0873015873015872967410900*var_75;
    A[8] = 0.0083333333333333332176851*var_7*var_99;
    A[13] = A[8];
    const double var_100 = var_56 + var_25;
    const double var_101 = 0.2000000000000000111022302*var_61 + 0.3333333333333333148296163*var_53 + 2.0000000000000000000000000*var_52 + var_54 + 0.8000000000000000444089210*var_47 + 0.1000000000000000055511151*var_55 + 0.1333333333333333314829616*var_100;
    A[35] = 0.0031746031746031746004211*var_101*var_7;
    const double var_102 = var_70 + var_20;
    const double var_103 = var_72 + 0.1000000000000000055511151*var_90 + 0.3333333333333333148296163*var_71 + 0.1333333333333333314829616*var_102 + 0.8000000000000000444089210*var_46 + 2.0000000000000000000000000*var_75 + 0.2000000000000000111022302*var_74;
    A[21] = 0.0031746031746031746004211*var_103*var_7;
    A[9] = 0.0031746031746031746004211*var_7*var_79;
    A[19] = A[9];
    const double var_104 = var_54 + var_24;
    const double var_105 = 0.1000000000000000055511151*var_57 + var_62 + 0.1333333333333333314829616*var_104 + 0.3333333333333333148296163*var_55 + 0.2000000000000000111022302*var_97 + var_25;
    A[22] = 0.0031746031746031746004211*var_105*var_7;
    A[18] = A[3];
    A[32] = A[17];
    const double var_106 = var_21 + var_85 + 0.5000000000000000000000000*var_84 + var_86 + -0.1000000000000000055511151*var_31 + -0.0250000000000000013877788*var_29 + var_88;
    A[16] = 0.0031746031746031746004211*var_106*var_7;
    A[26] = A[16];
    A[25] = A[10];
    A[30] = A[5];
    A[24] = A[4];
    const double var_107 = 0.0277777777777777762358014*var_57 + 0.1111111111111111049432054*var_56 + 0.0500000000000000027755576*var_54 + 0.0833333333333333287074041*var_53 + 0.2000000000000000111022302*var_52 + 0.0333333333333333328707404*var_47 + 0.0555555555555555524716027*var_24 + 5.6666666666666660745477202*w[0][2]*w[1][2]*w[2][2]*w[3][2] + 0.5000000000000000000000000*var_55;
    A[14] = 0.0011904761904761905835781*var_107*var_7;
    A[27] = A[22];
  }

  void tabulate_tensor(double* const A,
                       const double* const* w,
                       const ufc::cell& c,
                       unsigned int num_quadrature_points,
                       const double* const* quadrature_points,
                       const double* quadrature_weights) const
  {
    assert(0 && "This function is not implemented!");
  }
};

extern "C" ufc::cell_integral* newExcafeCellIntegral_0()
{
  return new ExcafeCellIntegral_0();
}
